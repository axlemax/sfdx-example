{
  "status": 0,
  "result": [
    {
      "command": "api:display",
      "description": "display current org’s limits",
      "longDescription": "Displays remaining and maximum calls and events for your org.",
      "help": "When you execute this command in a project, it provides limit information for your default scratch org.\n\nExamples:\n   $ sfdx force:limits:api:display\n   $ sfdx force:limits:api:display -u me@my.org",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:limits",
      "supportsTargetDevHubUsername": false,
      "usage": "force:limits:api:display [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "app:create",
      "description": "create a Lightning app",
      "longDescription": "Creates a Lightning app bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:app:create -n myapp\n   $ sfdx force:lightning:app:create -n myapp -d lightning\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "appname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Lightning app",
          "longDescription": "The Lightning app name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningApp*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningApp"
          ],
          "default": "DefaultLightningApp"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:app:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "bulk:delete",
      "description": "bulk delete records from a csv file",
      "longDescription": "Deletes a batch of records listed in a CSV file.",
      "help": "The file must be a CSV file with only one column: \"Id\".\nOne job can contain many batches, depending on the length of the CSV file.\nReturns a job ID and a batch ID. Use these IDs to check job status with data:bulk:status.\n\nExamples:\n   $ sfdx force:data:bulk:delete -s Account -f ./path/to/file.csv\n   $ sfdx force:data:bulk:delete -s MyObject__c -f ./path/to/file.csv",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the sObject type of the records you’re deleting",
          "longDescription": "The sObject type of the records you’re deleting."
        },
        {
          "name": "csvfile",
          "char": "f",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "file",
          "description": "the path to the CSV file containing the ids of the records to delete",
          "longDescription": "The path to the CSV file that contains the IDs of the records to delete."
        },
        {
          "name": "wait",
          "char": "w",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "minutes",
          "description": "the number of minutes to wait for the command to complete before displaying the results",
          "longDescription": "The number of minutes to wait for the command to complete before displaying the results."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:bulk:delete -s <string> -f <file> [-w <minutes>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "bulk:status",
      "description": "view the status of a bulk data load job or batch",
      "longDescription": "Polls the Bulk API for job status or batch status.",
      "help": "Examples:\n   $ sfdx force:data:bulk:status -i 750xx000000005sAAA\n   $ sfdx force:data:bulk:status -i 750xx000000005sAAA -b 751xx000000005nAAA",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "jobid",
          "char": "i",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "id",
          "description": "the ID of the job you want to view or of the job whose batch you want to view",
          "longDescription": "The ID of the job you want to view or of the job whose batch you want to view."
        },
        {
          "name": "batchid",
          "char": "b",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "id",
          "description": "the ID of the batch whose status you want to view",
          "longDescription": "The ID of the batch whose status you want to view."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:bulk:status -i <id> [-b <id>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "bulk:upsert",
      "description": "bulk upsert records from a CSV file",
      "longDescription": "Creates a job and one or more batches for inserting new rows and updating existing rows by accessing the Bulk API.",
      "help": "Inserts or updates records from a CSV file. \nOne job can contain many batches, depending on the length of the CSV file.\nReturns a job ID and a batch ID. Use these IDs to check job status with data:bulk:status.\n\nFor information about formatting your CSV file, see \"Prepare CSV Files\" in the Bulk API Developer Guide.\n\nExamples:\n   $ sfdx force:data:bulk:upsert -s MyObject__c -f ./path/to/file.csv -i MyField__c\n   $ sfdx force:data:bulk:upsert -s MyObject__c -f ./path/to/file.csv -i Id -w 2",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the sObject type of the records you want to upsert",
          "longDescription": "The sObject type of the records you want to upsert."
        },
        {
          "name": "csvfile",
          "char": "f",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "file",
          "description": "the path to the CSV file that defines the records to upsert",
          "longDescription": "The path to the CSV file that defines the records to upsert."
        },
        {
          "name": "externalid",
          "char": "i",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "id",
          "description": "the column name of the external ID",
          "longDescription": "The column name of the external ID."
        },
        {
          "name": "wait",
          "char": "w",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "minutes",
          "description": "the number of minutes to wait for the command to complete before displaying the results",
          "longDescription": "The number of minutes to wait for the command to complete before displaying the results."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:bulk:upsert -s <string> -f <file> -i <id> [-w <minutes>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "class:create",
      "description": "create an Apex class",
      "longDescription": "Creates an Apex class in the specified directory or the current working directory. If you don’t explicitly set the API version, it defaults to the current API version. The .cls file and associated metadata file are created.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:apex:class:create -n MyClass\n   $ sfdx force:apex:class:create -n MyClass -d classes\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "classname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Apex class",
          "longDescription": "The name of the new Apex class. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultApexClass*,ApexException,ApexUnitTest,InboundEmailService)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultApexClass",
            "ApexException",
            "ApexUnitTest",
            "InboundEmailService"
          ],
          "default": "DefaultApexClass"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:apex",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:class:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "commands:display",
      "description": "display help for force commands",
      "longDescription": "Displays help for commands in the force namespace.",
      "help": "Displays --help output for commands in the force namespace.\nTo display more details about the commands’ parameters, include the --json flag.",
      "requiresProject": false,
      "topic": "force:doc",
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:doc:commands:display [--json] [--loglevel <string>]"
    },
    {
      "command": "commands:list",
      "description": "list the force commands",
      "longDescription": "Lists the commands in the force namespace.",
      "help": "Displays a list of commands in the force namespace and their descriptions.",
      "requiresProject": false,
      "flags": [
        {
          "name": "usage",
          "char": "u",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "list only docopt usage strings",
          "longDescription": "Lists docopt usage strings instead of command names and descriptions."
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "topic": "force:doc",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:doc:commands:list [-u] [--json] [--loglevel <string>]"
    },
    {
      "command": "component:create",
      "description": "create a Visualforce component",
      "longDescription": "Creates a Visualforce component in the specified directory or the current working directory. The command creates the .component file and associated metadata file.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\nName and label are required.\n\nExamples:\n   $ sfdx force:visualforce:component:create -n mycomponent -l mylabel\n   $ sfdx force:visualforce:component:create -n mycomponent -l mylabel -d components\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultVFComponent*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultVFComponent"
          ],
          "default": "DefaultVFComponent"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "componentname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Visualforce component",
          "longDescription": "The Visualforce component name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "label",
          "char": "l",
          "hasValue": true,
          "required": true,
          "description": "Visualforce component label",
          "longDescription": "The label saved in the metadata for the Visualforce component.",
          "type": "string",
          "values": []
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:visualforce",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:visualforce:component:create -n <string> -l <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "component:create",
      "description": "create a Lightning component",
      "longDescription": "Creates a Lightning component bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:component:create -n mycomponent\n   $ sfdx force:lightning:component:create -n mycomponent -d lightning\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "componentname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Lightning component",
          "longDescription": "The Lightning component name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningCmp*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningCmp"
          ],
          "default": "DefaultLightningCmp"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:component:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "convert metadata from the Metadata API format into the Salesforce DX format",
      "longDescription": "Converts metadata retrieved via Metadata API into the source format used in Salesforce DX projects.",
      "help": "To work with metadata that you retrieved via Metadata API using the Salesforce DX tools, convert the metadata to the Salesforce DX source format using \"sfdx force:mdapi:convert\".\n\nTo convert the source back to the Metadata API format, so that you can deploy it using \"sfdx force:mdapi:deploy\", run \"sfdx force:source:convert\".\n\nExamples:\n   $ sfdx force:mdapi:convert -r <path to source>\n   $ sfdx force:mdapi:convert -r <path to source> -d <path to outputdir>",
      "initializeMetadataRegistry": true,
      "showProgress": true,
      "requiresUsername": false,
      "flags": [
        {
          "name": "rootdir",
          "char": "r",
          "description": "the root directory containing the Metadata API–formatted metadata",
          "longDescription": "The root directory that contains the metadata you retrieved using Metadata API.",
          "required": true,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "the output directory to store the Salesforce DX–formatted source",
          "longDescription": "The directory to store your source in after it’s converted to the Salesforce DX format. Can be an absolute or relative path.",
          "required": false,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "convert",
      "topic": "force:mdapi",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:mdapi:convert -r <directory> [-d <directory>] [--json] [--loglevel <string>]"
    },
    {
      "description": "convert Salesforce DX source into Metadata API format",
      "longDescription": "Converts source in a Salesforce DX project into metadata that you can deploy using Metadata API.",
      "help": "To convert Salesforce DX–formatted source into a format that you can deploy using Metadata API, run \"sfdx force:source:convert\". Then deploy the metadata using \"sfdx force:mdapi:deploy\".\n\nTo convert Metadata API–formatted source into the Salesforce DX format, run \"sfdx force:mdapi:convert\".\n\nTo specify a package name that includes spaces, enclose the name in single quotes.\n\nExamples:\n   $ sfdx force:source:convert -r <path to source>\n   $ sfdx force:source:convert -r <path to source> -d <path to output dir> -n 'My Package'",
      "initializeMetadataRegistry": true,
      "requiresUsername": false,
      "showProgress": true,
      "flags": [
        {
          "name": "rootdir",
          "char": "r",
          "description": "the source directory for the source to be converted",
          "longDescription": "The directory that contains the Salesforce DX–formatted source to convert.",
          "required": false,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "the output directory to export the Metadata API–formatted metadata to",
          "longDescription": "The output directory to export the Metadata API–formatted metadata to.",
          "required": false,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "packagename",
          "char": "n",
          "description": "the name of the package to associate with the Metadata API–formatted metadata",
          "longDescription": "The name of the package to associate with the Metadata API–formatted metadata.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "convert",
      "topic": "force:source",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:source:convert [-r <directory>] [-d <directory>] [-n <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "create a scratch org",
      "longDescription": "Creates a scratch org using values specified in a configuration file or key=value pairs that you specify on the command line. Values specified on the command line override values in the configuration file.",
      "help": "To set up a connected app for your new scratch org, specify the value that was returned when you created a connected app in your Dev Hub org as --clientid.\n\nExamples:\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a TestOrg1\n   $ sfdx force:org:create -a MyDevOrg -s -v me@myhub.org edition=Developer\n   $ sfdx force:org:create -f config/enterprise-scratch-def.json -a OrgWithOverrides username=testuser1@mycompany.org",
      "showProgress": true,
      "requiresProject": false,
      "supportsTargetDevHubUsername": true,
      "variableArgs": true,
      "orgType": "defaultdevhubusername",
      "flags": [
        {
          "name": "definitionfile",
          "char": "f",
          "description": "path to a scratch org definition file",
          "longDescription": "Path to a scratch org definition file. Either --definitionfile or --definitionjson is required.",
          "hasValue": true,
          "required": false,
          "type": "filepath"
        },
        {
          "name": "definitionjson",
          "char": "j",
          "description": "scratch org definition in json format ",
          "longDescription": "Scratch org definition in JSON format. Either --definitionfile or --definitionjson is required.",
          "hasValue": true,
          "hidden": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "nonamespace",
          "char": "n",
          "description": "creates the scratch org with no namespace",
          "longDescription": "Creates the scratch org with no namespace. Useful when using a scratch org to test installations of packages with namespaces.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "noancestors",
          "char": "c",
          "description": "do not include second-generation package ancestors in the scratch org",
          "longDescription": "Do not include second-generation package ancestors in the scratch org.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "clientid",
          "char": "i",
          "description": "connected app consumer key",
          "longDescription": "Connected app consumer key, as configured in your Dev Hub.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "setdefaultusername",
          "char": "s",
          "description": "set the created org as the default username",
          "longDescription": "Sets the created org as the default username.",
          "required": false,
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setalias",
          "char": "a",
          "description": "set an alias for for the created scratch org",
          "longDescription": "Sets an alias for for the created scratch org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "env",
          "char": "e",
          "description": "environment where the scratch org is created: [sandbox*,virtual,prototype] (sandbox*,virtual,prototype)",
          "longDescription": "Environment where the scratch org is created: [sandbox*,virtual,prototype].",
          "required": false,
          "hasValue": true,
          "hidden": true,
          "values": [
            "sandbox*",
            "virtual",
            "prototype"
          ],
          "type": "string"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "the streaming client socket timeout (in minutes) (default:6, min:2)",
          "longDescription": "Sets the streaming client socket timeout, in minutes.If the streaming client socket has no contact from the server for a number of minutes, the client exits. Specify a longer wait time if timeouts occur frequently.",
          "hasValue": true,
          "required": false,
          "min": 2,
          "type": "minutes",
          "default": 6
        },
        {
          "name": "durationdays",
          "char": "d",
          "description": "duration of the scratch org (in days) (default:7, min:1, max:30)",
          "longDescription": "Sets the duration of the scratch org, in days. Valid values are from 1-30. The default is 7 days.",
          "hasValue": true,
          "required": false,
          "type": "number"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "create",
      "topic": "force:org",
      "supportsTargetUsername": false,
      "usage": "force:org:create name=value... [-f <filepath>] [-n] [-c] [-i <string>] [-s] [-a <string>] [-w <minutes>] [-d <number>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "create a second-generation package",
      "longDescription": "Creates a second-generation package.",
      "help": "First, use this command to create a second-generation package. Then create a package version.\n\nTo create a package with spaces in its name or description, enclose those values in single quotes.\n\nExamples:\n   $ sfdx force:package2:create -n PackageName -d 'My New Package' -o Unlocked\n\nRun 'sfdx force:package2:list' to list all second-generation packages in the Dev Hub org.",
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "name",
          "char": "n",
          "description": "package name",
          "longDescription": "Name of the second-generation package to create.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "containeroptions",
          "char": "o",
          "description": "[*Managed | Unlocked | Locked] container options for the package2 (Managed=DeveloperManagedSubscriberManaged, Unlocked=DeveloperControlledSubscriberEditable, Locked=DeveloperControlledSubscriberLocked)",
          "longDescription": "Container options for the package2. \nManaged is default. Other options include Unlocked and Locked. (Managed=DeveloperManagedSubscriberManaged, Unlocked=DeveloperControlledSubscriberEditable, Locked=DeveloperControlledSubscriberLocked). \nThese options determine the upgrade and editability rules.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "description",
          "char": "d",
          "description": "package description",
          "longDescription": "Description of the second-generation package.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "nonamespace",
          "char": "e",
          "description": "creates the package with no namespace; available only for developer-controlled packages.",
          "longDescription": "Creates the package with no namespace. Available only for developer-controlled packages. Useful when migrating an existing org to packages, but new metadata should use a namespaced package.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "create",
      "topic": "force:package2",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "usage": "force:package2:create -n <string> [-o <string>] [-d <string>] [-e] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "create",
      "description": "create a user for a scratch org",
      "longDescription": "Creates a user for a scratch org.",
      "help": "Create a user for a scratch org, optionally setting an alias for use by the CLI, assigning permission sets (e.g., permsets=ps1,ps2), generating a password (e.g., generatepassword=true), and setting User sObject fields.\n\nExamples:\n   $ sfdx force:user:create\n   $ sfdx force:user:create -a testuser1 -f config/project-user-def.json\n   $ sfdx force:user:create username=testuser1@my.org email=me@my.org permsets=DreamHouse\n   $ sfdx force:user:create -f config/project-user-def.json email=me@my.org generatepassword=true",
      "requiresProject": false,
      "variableArgs": true,
      "variableArgsRequired": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "definitionfile",
          "char": "f",
          "description": "file path to a user definition",
          "longDescription": "File path to a user definition.",
          "hasValue": true,
          "required": false,
          "type": "filepath"
        },
        {
          "name": "setalias",
          "char": "a",
          "description": "set an alias for the created username to reference within the CLI",
          "longDescription": "Sets an alias for the created username to reference within the CLI.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "topic": "force:user",
      "supportsTargetDevHubUsername": true,
      "usage": "force:user:create name=value... [-f <filepath>] [-a <string>] [-u <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "create",
      "description": "create a new SFDX project",
      "longDescription": "Creates a Salesforce DX project  in the specified directory or the current working directory. The command creates the necessary configuration files and folders.",
      "help": "Default values are used if the template, namespace, defaultpackagedir, and outputdir aren’t supplied.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:project:create --projectname mywork\n   $ sfdx force:project:create --projectname mywork --defaultpackagedir myapp\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "projectname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated project",
          "longDescription": "The name for the new project. Any valid folder name is accepted.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (Defaultsfdx-project.json*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "Defaultsfdx-project.json"
          ],
          "default": "Defaultsfdx-project.json"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "loginurl",
          "char": "l",
          "hasValue": true,
          "required": false,
          "hidden": true,
          "description": "Salesforce instance login URL (https://login.salesforce.com*)",
          "longDescription": "The login URL for the Salesforce instance being used.Normally defaults to https://login.salesforce.com.",
          "type": "string",
          "values": [],
          "default": "https://login.salesforce.com"
        },
        {
          "name": "sourceapiversion",
          "char": "x",
          "hasValue": true,
          "required": false,
          "hidden": true,
          "description": "source API version number (42.0*)",
          "longDescription": "The source API version for the project. The version defaults to the current release and will normally be defaulted.This is used to properly import or export metadata.",
          "type": "string",
          "values": [],
          "default": "42.0"
        },
        {
          "name": "namespace",
          "char": "s",
          "hasValue": true,
          "required": false,
          "description": "project associated namespace",
          "longDescription": "The namespace associated with this project and any connected scratch orgs.",
          "type": "string",
          "values": []
        },
        {
          "name": "defaultpackagedir",
          "char": "p",
          "hasValue": true,
          "required": false,
          "description": "default package directory name (force-app*)",
          "longDescription": "The default package directory name. Metadata items such as classes and Lightning bundles are placed inside this folder.",
          "type": "string",
          "values": [],
          "default": "force-app"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:project",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:project:create -n <string> [-t <string>] [-d <string>] [-s <string>] [-p <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "mark a scratch org for deletion",
      "longDescription": "Marks a scratch org for deletion.",
      "help": "To mark the org for deletion without being prompted to confirm, specify --noprompt.\n\nExamples:\n   $ sfdx force:org:delete -u me@my.org\n   $ sfdx force:org:delete -u MyOrgAlias -p",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "noprompt",
          "char": "p",
          "description": "no prompt to confirm deletion",
          "longDescription": "No prompt to confirm deletion.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org",
          "longDescription": "A username or alias for the target org.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "delete",
      "topic": "force:org",
      "usage": "force:org:delete -u <string> [-p] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "deploy metadata to an org using Metadata API",
      "longDescription": "Deploys file representations of components into an org by creating or updating the components they represent. You can deploy and retrieve up to 10,000 files or 400 MB (39 MB compressed) at one time. The default target username is the admin user for the default scratch org.",
      "help": "Specify the location of the files to deploy as a .zip file or by the root of the directory tree containing the files. To check the status of a deployment, specify its job ID.\n\nThe default value of --rollbackonerror is true, but the corresponding parameter in the Metadata API deploy() call defaults to false.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "checkonly",
          "char": "c",
          "description": "validate deploy but don’t save to the org (default:false)",
          "longDescription": "Validates the deployed metadata and runs all Apex tests, but prevents the deployment from being saved to the org.\nIf you change a field type from Master-Detail to Lookup or vice versa, that change isn’t supported when using the --checkonly parameter to test a deployment (validation). This kind of change isn’t supported for test deployments to avoid the risk of data loss or corruption. If a change that isn’t supported for test deployments is included in a deployment package, the test deployment fails and issues an error.\nIf your deployment package changes a field type from Master-Detail to Lookup or vice versa, you can still validate the changes prior to deploying to Production by performing a full deployment to another test Sandbox. A full deployment includes a validation of the changes as part of the deployment process.",
          "required": false,
          "hasValue": false,
          "type": "boolean",
          "xor": [
            "jobid"
          ],
          "default": "false"
        },
        {
          "name": "deploydir",
          "char": "d",
          "description": "root of directory tree of files to deploy",
          "longDescription": "The root of the directory tree that contains the files to deploy. The root must contain a valid package.xml file describing the entities in the directory structure. Required to initiate a deployment if you don’t use --zipfile. If you specify both --zipfile and --deploydir, a zip file of the contents of the --deploydir directory is written to the location specified by --zipfile.",
          "required": false,
          "hasValue": true,
          "type": "directory",
          "xor": [
            "zipfile"
          ]
        },
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: 0)",
          "longDescription": "The number of minutes to wait for the command to complete. The default is –1 (no limit). 0",
          "required": false,
          "hasValue": true,
          "type": "minutes"
        },
        {
          "name": "jobid",
          "char": "i",
          "description": "WARNING: The flag \"jobid\" has been deprecated and will be removed in v41.01.0 or later. Instead, use \"sfdx force:mdapi:deploy:report -i <jobId>\".",
          "longDescription": "The job ID (asyncId) of the deployment you want to check. Use with -w to resume waiting.",
          "deprecated": {
            "message": "Instead, use \"sfdx force:mdapi:deploy:report -i <jobId>\".",
            "version": "41.0"
          },
          "required": false,
          "hasValue": true,
          "type": "id"
        },
        {
          "name": "testlevel",
          "char": "l",
          "description": "deployment testing level (NoTestRun,RunSpecifiedTests,RunLocalTests,RunAllTestsInOrg)",
          "longDescription": "Specifies which level of deployment tests to run. Valid values are:\nNoTestRun—No tests are run. This test level applies only to deployments to development environments, such as sandbox, Developer Edition, or trial orgs. This test level is the default for development environments.\nRunSpecifiedTests—Runs only the tests that you specify in the --runtests option. Code coverage requirements differ from the default coverage requirements when using this test level. Executed tests must comprise a minimum of 75% code coverage for each class and trigger in the deployment package. This coverage is computed for each class and trigger individually and is different than the overall coverage percentage.\nRunLocalTests—All tests in your org are run, except the ones that originate from installed managed packages. This test level is the default for production deployments that include Apex classes or triggers.\nRunAllTestsInOrg—All tests in your org are run, including tests of managed packages.\nIf you don’t specify a test level, the default behavior depends on the contents of your deployment package. For more information, see “Running Tests in a Deployment” in the Metadata API Developer Guide.",
          "required": false,
          "hasValue": true,
          "type": "string",
          "values": [
            "NoTestRun",
            "RunSpecifiedTests",
            "RunLocalTests",
            "RunAllTestsInOrg"
          ]
        },
        {
          "name": "runtests",
          "char": "r",
          "description": "tests to run if --testlevel RunSpecifiedTests",
          "longDescription": "Lists the Apex classes containing the deployment tests to run. Use this parameter when you set --testlevel to RunSpecifiedTests.",
          "required": false,
          "hasValue": true,
          "type": "string",
          "array": true
        },
        {
          "name": "rollbackonerror",
          "char": "e",
          "description": "WARNING: The flag \"rollbackonerror\" has been deprecated and will be removed in v41.01.0 or later. Instead, use \"ignoreerrors\".",
          "longDescription": "Indicates whether any failure causes a complete rollback of the deploy operation. The default is true. If set to false, the operation performs actions that don’t have errors and returns errors for the remaining actions. You must set this parameter to true if you are deploying to a production org.",
          "required": false,
          "hasValue": true,
          "type": "boolean",
          "default": "true",
          "deprecated": {
            "message": "Instead, use \"ignoreerrors\".",
            "version": "41.0"
          }
        },
        {
          "name": "ignoreerrors",
          "char": "o",
          "description": "ignore any errors and do not roll back deployment (default:false)",
          "longDescription": "Ignores the deploy errors, and continues with the deploy operation. The default is false. Keep this parameter set to false when deploying to a production org. If set to true, components without errors are deployed, and components with errors are skipped.",
          "required": false,
          "hasValue": false,
          "type": "flag",
          "default": "false"
        },
        {
          "name": "ignorewarnings",
          "char": "g",
          "description": "whether a warning will allow a deployment to complete successfully (default:false)",
          "longDescription": "If a warning occurs and ignoreWarnings is set to true, the success field in DeployMessage is true. When ignoreWarnings is set to false, success is set to false, and the warning is treated like an error.\nThis field is available in API version 18.0 and later. Prior to version 18.0, there was no distinction between warnings and errors. All problems were treated as errors and prevented a successful deployment.",
          "required": false,
          "hasValue": false,
          "type": "flag",
          "default": "false"
        },
        {
          "name": "zipfile",
          "char": "f",
          "description": "path to .zip file of metadata to deploy",
          "longDescription": "The path to the .zip file of metadata files to deploy. You must indicate this option or --deploydir.If you specify both --zipfile and --deploydir, a .zip file of the contents of the deploy directory is created at the path specified for the .zip file.",
          "required": false,
          "hasValue": true,
          "type": "filepath"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "verbose output of deploy results",
          "longDescription": "Indicates that you want verbose output from the deploy operation.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "deploy",
      "topic": "force:mdapi",
      "supportsTargetDevHubUsername": false,
      "usage": "force:mdapi:deploy (-c | -i <id>) (-d <directory> | -f <filepath>) [-w <minutes>] [-l <string>] [-r <string>...] [-e <boolean>] [-o] [-g] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "check the status of a metadata deployment",
      "longDescription": "Checks the current status of an asynchronous metadata deployment.",
      "help": "Specify the job ID for the deploy you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: 0)",
          "longDescription": "The number of minutes to wait for the command to complete. The default is –1 (no limit). 0",
          "required": false,
          "hasValue": true,
          "type": "minutes"
        },
        {
          "name": "jobid",
          "char": "i",
          "description": "job ID of the deployment you want to check",
          "longDescription": "The job ID (asyncId) of the deployment you want to check. Use with -w to resume waiting.",
          "required": false,
          "hasValue": true,
          "type": "id"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "verbose output of deploy results",
          "longDescription": "Indicates that you want verbose output for deploy results.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "deploy:report",
      "topic": "force:mdapi",
      "supportsTargetDevHubUsername": false,
      "usage": "force:mdapi:deploy:report [-w <minutes>] [-i <id>] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "get org description",
      "longDescription": "Gets the description for the current or target org.",
      "help": "Output includes your access token, client ID, connected status, org ID, instance URL, username, and alias, if applicable. Use --verbose to include the SFDX auth URL.\n\nExamples:\n   $ sfdx force:org:display\n   $ sfdx force:org:display -u me@my.org\n   $ sfdx force:org:display -u TestOrg1 --json\n   $ sfdx force:org:display -u TestOrg1 --json > tmp/MyOrgDesc.json",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "emit additional command output to stdout",
          "longDescription": "Emit additional command output to stdout.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "display",
      "topic": "force:org",
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:display [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "command": "display",
      "description": "displays information about a user of a scratch org",
      "longDescription": "Displays information about a user of a scratch org that the Salesforce CLI has created or authenticated.",
      "help": "Output includes the profile name, org ID, access token, instance URL, login URL, and alias if applicable.\nExamples:\n   $ sfdx force:user:display\n   $ sfdx force:user:display -u me@my.org --json",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "topic": "force:user",
      "supportsTargetDevHubUsername": true,
      "usage": "force:user:display [-u <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "event:create",
      "description": "create a Lightning event",
      "longDescription": "Creates a Lightning event bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:event:create -n myevent\n   $ sfdx force:lightning:event:create -n myevent -d lightning\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "eventname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Lightning event",
          "longDescription": "The Lightning event name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningEvt*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningEvt"
          ],
          "default": "DefaultLightningEvt"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:event:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "execute",
      "description": "execute anonymous Apex code",
      "longDescription": "Executes one or more lines of anonymous Apex code, or executes the code in a local file.",
      "help": "Executes one or more lines of Apex code, or executes the code in a local file.\nBefore you enter code, run this command with no parameters to get a prompt.\nFrom the prompt, all commands are executed in a single execute anonymous request.\nFor more information, see \"Anonymous Blocks\" in the Apex Developer Guide.\n\nExamples:\n   $ sfdx force:apex:execute -f ~/test.apex\n\n   $ sfdx force:apex:execute \n   >> Start typing Apex code. Press the Enter key after each line, \n   >> then press CTRL+D when finished.",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "apexcodefile",
          "char": "f",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "file",
          "description": "path to a local file containing Apex code",
          "longDescription": "Path to a local file that contains Apex code."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:apex",
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:execute [-f <file>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "get config var values for given names",
      "longDescription": "Gets the Salesforce CLI configuration values for your default scratch org, your default Dev Hub org, your default instance URL, or any combination of the three.",
      "help": "To see your default scratch org username, include \"defaultusername\".\nTo see your default Dev Hub, include \"defaultdevhubusername\".\nTo see your default instance URL, include \"instanceUrl\".\nTo see the locations where your values are set, include the --verbose flag.\n\nExamples:\n   $ sfdx force:config:get defaultusername\n   $ sfdx force:config:get defaultusername defaultdevhubusername instanceUrl\n   $ sfdx force:config:get defaultusername defaultdevhubusername --verbose",
      "requiresProject": false,
      "variableArgs": true,
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "emit additional command output to stdout",
          "longDescription": "Emit additional command output to stdout.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "get",
      "topic": "force:config",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:config:get name=value... [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "install a package in the target org",
      "longDescription": "Installs a package in the target org.",
      "help": "Supply the ID of the package version you want to install. Installs to the default username org unless you supply the username for a different target org.\n\nExamples:\n   $ sfdx force:package:install -i 04t6A0000004eytQAA\n   $ sfdx force:package:install -i 04t6A0000004eytQAA -u me@my.org",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "id",
          "char": "i",
          "description": "ID of the package version to install (starts with 04t)",
          "longDescription": "The ID of the package version to install (starts with 04t).",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "number of minutes to wait for installation status",
          "longDescription": "Maximum number of minutes to wait for installation status. The default is 0.",
          "hasValue": true,
          "required": false,
          "type": "minutes"
        },
        {
          "name": "installationkey",
          "char": "k",
          "description": "installation key for key-protected package (default: null)",
          "longDescription": "Installation key for installing a key-protected package. The default is null.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "publishwait",
          "char": "p",
          "description": "number of minutes to wait for subscriber package version ID to become available in the target org",
          "longDescription": "Maximum number of minutes to wait for the Subscriber Package Version ID to become available in the target org before canceling the install request. The default is 0.",
          "hasValue": true,
          "required": false,
          "type": "minutes"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "install",
      "topic": "force:package",
      "supportsTargetDevHubUsername": false,
      "usage": "force:package:install -i <id> [-w <minutes>] [-k <string>] [-p <minutes>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve the status of a package installation request",
      "longDescription": "Retrieves the status of a package installation request.",
      "help": "Displays the status of a package install request.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "requestid",
          "char": "i",
          "description": "ID of the package install request you want to check",
          "longDescription": "The ID of the package install request you want to check.",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "install:get",
      "topic": "force:package",
      "supportsTargetDevHubUsername": false,
      "usage": "force:package:install:get -i <id> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "list the org’s installed packages",
      "longDescription": "Lists all packages installed in the target org.",
      "help": "Lists all packages installed in the target org.",
      "orgType": "defaultusername",
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "installed:list",
      "topic": "force:package",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:package:installed:list [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "interface:create",
      "description": "create a Lightning interface",
      "longDescription": "Creates a Lightning interface bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:interface:create -n myinterface\n   $ sfdx force:lightning:interface:create -n myinterface -d lightning\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "interfacename",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Lightning interface",
          "longDescription": "The Lightning interface name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningIntf*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningIntf"
          ],
          "default": "DefaultLightningIntf"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:interface:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "authorize an org using the JWT flow",
      "longDescription": "Authorizes a Salesforce org using the JWT flow.",
      "help": "Authorizes a Salesforce org using a private key file that has been uploaded to a personal connected app.\n\nIf you specify an --instanceurl value, this value overrides the sfdcLoginUrl value in your sfdx-project.json file. To specify a My Domain URL, use the format <yourdomain>.my.salesforce.com (not <yourdomain>.lightning.force.com).\n\nExamples:\n   $ sfdx force:auth:jwt:grant -u me@my.org -f <path to jwt key file> -i <OAuth client id>\n   $ sfdx force:auth:jwt:grant -u me@my.org -f <path to jwt key file> -i <OAuth client id> -s -a MyDefaultOrg\n   $ sfdx force:auth:jwt:grant -u me@acme.org -f <path to jwt key file> -i <OAuth client id> -r https://acme.my.salesforce.com",
      "requiresProject": false,
      "flags": [
        {
          "name": "username",
          "char": "u",
          "description": "authentication username",
          "longDescription": "The authentication username.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "jwtkeyfile",
          "char": "f",
          "description": "path to a file containing the private key",
          "longDescription": "Path to a file containing the private key.",
          "hasValue": true,
          "required": true,
          "type": "filepath"
        },
        {
          "name": "clientid",
          "char": "i",
          "description": "OAuth client ID (sometimes called the consumer key)",
          "longDescription": "The OAuth client ID (sometimes referred to as the consumer key).",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "instanceurl",
          "char": "r",
          "description": "the login URL of the instance the org lives on",
          "longDescription": "The login URL of the Salesforce instance that the org lives on.",
          "hasValue": true,
          "type": "url"
        },
        {
          "name": "setdefaultdevhubusername",
          "char": "d",
          "description": "set the authenticated org as the default dev hub org for scratch org creation",
          "longDescription": "Sets the authenticated org as the default Dev Hub org for scratch org creation.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setdefaultusername",
          "char": "s",
          "description": "set the authenticated org as the default username that all commands run against",
          "longDescription": "Sets the authenticated org as the default username that all commands run against.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setalias",
          "char": "a",
          "description": "set an alias for the authenticated org",
          "longDescription": "Sets an alias for the authenticated org.",
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "jwt:grant",
      "topic": "force:auth",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:auth:jwt:grant -u <string> -f <filepath> -i <string> [-r <url>] [-d] [-s] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "topic": "force:lightning",
      "command": "lint",
      "description": "analyse (lint) Lightning component code",
      "longDescription": "Runs a static analysis, or “lint,” tool on your Lightning component code. The default rules include recommended best practices and LockerService requirements. For details, including how to customize the rules for your org, see the Lightning Components Developer Guide.",
      "help": "Examples: \n   $ sfdx force:lightning:lint ./path/to/be/linted/\n   $ heroku lightning:lint ./path/to/be/linted/",
      "args": [
        {
          "name": "path"
        }
      ],
      "flags": [
        {
          "name": "ignore",
          "char": "i",
          "hasValue": true,
          "description": "pattern used to ignore some folders",
          "longDescription": "A “glob” pattern used to filter folders (and their contents) out of the analysis. For example: --ignore **/foo/**."
        },
        {
          "name": "files",
          "hasValue": true,
          "description": "pattern used to include specific files",
          "longDescription": "A “glob” pattern used to add specific files to the analysis. For example, to only analyse your controller files, use --files **/*Controller.js. When specified, this value overrides the --ignore flag. The default is all .js files."
        },
        {
          "name": "json",
          "char": "j",
          "hasValue": false,
          "description": "format output as JSON",
          "longDescription": "Format output as JSON, usually for integration with other tools. The default is standard text output format."
        },
        {
          "name": "config",
          "hasValue": true,
          "description": "path to a custom ESLint configuration file",
          "longDescription": "Path to a custom ESLint configuration file. Only code style rules are used, while the rest are ignored. For example: --config path/to/.eslintrc."
        },
        {
          "name": "verbose",
          "hasValue": false,
          "description": "report warnings in addition to errors",
          "longDescription": "Report both warnings and errors. The default is to report only errors."
        },
        {
          "name": "exit",
          "hasValue": false,
          "description": "exit with error code 1 if there are lint issues",
          "longDescription": "Exit with error code 1 if there are lint issues. The default exits without an error code."
        }
      ]
    },
    {
      "description": "list username aliases for the Salesforce CLI",
      "longDescription": "Lists the aliases that the Salesforce CLI can use for various commands and tasks.",
      "help": "Example: \n   $ sfdx force:alias:list",
      "requiresProject": false,
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "list",
      "topic": "force:alias",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:alias:list [--json] [--loglevel <string>]"
    },
    {
      "description": "list config vars for the Salesforce CLI",
      "longDescription": "Lists the configuration variables for the Salesforce CLI.",
      "help": "Lists the config variables that the Salesforce CLI uses for various commands and tasks.",
      "requiresProject": false,
      "command": "list",
      "topic": "force:config",
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:config:list [--json] [--loglevel <string>]"
    },
    {
      "description": "list all orgs you’ve created or authenticated to",
      "longDescription": "Lists all orgs that the Salesforce CLI has created or authenticated to.",
      "help": "Examples:\n   $ sfdx force:org:list\n   $ sfdx force:org:list --verbose --json\n   $ sfdx force:org:list --verbose --json > tmp/MyOrgList.json",
      "requiresProject": false,
      "flags": [
        {
          "name": "all",
          "description": "include expired, deleted, and unknown-status scratch orgs",
          "longDescription": "Lists all authenticated orgs, including expired, deleted, and unknown-status scratch orgs.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "clean",
          "description": "remove all local org authorizations for non-active orgs",
          "longDescription": "Remove all local org authorizations for deleted or expired orgs.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "noprompt",
          "char": "p",
          "description": "do not prompt for confirmation",
          "longDescription": "Do not prompt for confirmation.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "list more information about each org",
          "longDescription": "Lists more information about each org.",
          "hasValue": false,
          "hidden": true,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "list",
      "topic": "force:org",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:list [--all] [--clean] [-p] [--json] [--loglevel <string>]"
    },
    {
      "description": "list all second-generation packages in the Dev Hub org",
      "longDescription": "Lists all second-generation packages in the Dev Hub org.",
      "help": "You can view the namespace, IDs, and other details for each package.",
      "requiresProject": false,
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "list",
      "topic": "force:package2",
      "supportsTargetUsername": false,
      "usage": "force:package2:list [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "list",
      "description": "lists all users of a scratch org",
      "longDescription": "Lists all users of a scratch org that the Salesforce CLI has created or authenticated.",
      "help": "The original scratch org admin is marked with \"(A)\"\nExamples:\n   $ sfdx force:user:list\n   $ sfdx force:user:list -u me@my.org --json\n   $ sfdx force:user:list --json > tmp/MyUserList.json",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "topic": "force:user",
      "supportsTargetDevHubUsername": true,
      "usage": "force:user:list [-u <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "log:get",
      "description": "fetch a debug log",
      "longDescription": "Fetches a specific debug log.",
      "help": "When you execute this command in a project, it fetches the specified log from your default scratch org.To get the IDs for your debug logs, run \"sfdx force:apex:log:list\".\n\nExamples:\n   $ sfdx force:apex:log:get -i <log id>\n   $ sfdx force:apex:log:get -i <log id> -u me@my.org",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "logid",
          "char": "i",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "id",
          "description": "ID of the log to display",
          "longDescription": "ID of the log to display."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:apex",
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:log:get -i <id> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "log:list",
      "description": "list debug logs",
      "longDescription": "Displays a list of debug log IDs, along with general information about the logs.",
      "help": "When you execute this command in a project, it lists the log IDs for your default scratch org.\n\nExamples:\n   $ sfdx force:apex:log:list\n   $ sfdx force:apex:log:list -u me@my.org",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:apex",
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:log:list [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "log out from authorized orgs",
      "longDescription": "Logs you out from one or all of your authorized Salesforce orgs.",
      "help": "By default, this command logs you out from your default scratch org.\nExamples:\n   $ sfdx force:auth:logout -u me@my.org\n   $ sfdx force:auth:logout -a\n   $ sfdx force:auth:logout -p",
      "requiresProject": false,
      "requiresUsername": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "all",
          "char": "a",
          "description": "include all authenticated orgs",
          "longDescription": "Includes all authenticated orgs: for example, Dev Hubs, sandboxes, DE orgs, and expired, deleted, and unknown-status scratch orgs.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "noprompt",
          "char": "p",
          "description": "do not prompt for confirmation",
          "longDescription": "Do not prompt for confirmation.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "logout",
      "topic": "force:auth",
      "supportsTargetDevHubUsername": false,
      "usage": "force:auth:logout [-a] [-p] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "lwc:create",
      "description": "create an LWC bundle",
      "longDescription": "Creates an LWC bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:lwc:create -n mylwc\n   $ sfdx force:lightning:lwc:create -n mylwc -d lwc \n",
      "hidden": true,
      "args": [],
      "flags": [
        {
          "name": "lwcname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated LWC bundle",
          "longDescription": "The LWC bundle name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningLWC*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningLWC"
          ],
          "default": "DefaultLightningLWC"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:lwc:create -n <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "open an org in your browser",
      "longDescription": "Opens an org in your browser.",
      "help": "Opens your default scratch org, or another org that you specify.\n\nTo open a specific page, specify the portion of the URL after \"yourInstance.salesforce.com/\" as --path. \nFor example, specify \"--path one/one.app\" to open Lightning Experience, or specify \"--path /apex/YourPage\" to open a Visualforce page.\n\nTo generate a URL but not launch your browser, specify --urlonly.\n\nExamples:\n  $ sfdx force:org:open\n  $ sfdx force:org:open -u me@my.org\n  $ sfdx force:org:open -u MyTestOrg1\n  $ sfdx force:org:open -r -p one/one.app",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "path",
          "char": "p",
          "description": "navigation URL path",
          "longDescription": "Navigation URL path (not including domain).",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "urlonly",
          "char": "r",
          "description": "display navigation URL, but don’t launch browser",
          "longDescription": "Displays a navigation URL, but doesn’t launch your browser.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "open",
      "topic": "force:org",
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:open [-p <string>] [-r] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "open",
      "description": "edit a Lightning Page with Lightning App Builder",
      "longDescription": "Opens the specified Lightning Page in Lightning App Builder. Lightning Page files have the suffix .flexipage-meta.xml, and are stored in the flexipages directory. If you specify a different type of file, this command opens your org’s home page.",
      "help": "If Force.com IDE 2 is installed, the file opens in an embedded browser within the IDE. If Force.com IDE 2 isn’t installed, the file opens in your default browser.\nIf no browser-based editor is available for the selected file, this command opens your org’s home page.\nTo generate a URL for the browser-based editor but not open the editor, use --urlonly.\n\nExamples:\n   $ sfdx force:source:open -f Property_Record_Page.flexipage-meta.xml\n   $ sfdx force:source:open -f Property_Record_Page.flexipage-meta.xml -r",
      "requiresProject": true,
      "args": [],
      "flags": [
        {
          "name": "sourcefile",
          "char": "f",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "file",
          "description": "file to edit",
          "longDescription": "File to edit."
        },
        {
          "name": "urlonly",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "generate a navigation URL; don’t launch the editor",
          "longDescription": "Generate a navigation URL path, but don’t launch a browser-based editor."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:source",
      "supportsTargetDevHubUsername": false,
      "usage": "force:source:open -f <file> [-r] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "page:create",
      "description": "create a Visualforce page",
      "longDescription": "Creates a Visualforce page in the specified directory or the current working directory. The command creates the .page file and associated metadata file.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\nName and label are required.\n\nExamples:\n   $ sfdx force:visualforce:page:create -n mypage -l mylabel\n   $ sfdx force:visualforce:page:create -n mypage -l mylabel -d pages\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultVFPage*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultVFPage"
          ],
          "default": "DefaultVFPage"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "pagename",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Visualforce page",
          "longDescription": "The Visualforce page name. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "label",
          "char": "l",
          "hasValue": true,
          "required": true,
          "description": "Visualforce page label",
          "longDescription": "The label saved in the metadata for the Visualforce page.",
          "type": "string",
          "values": []
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:visualforce",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:visualforce:page:create -n <string> -l <string> [-t <string>] [-d <string>] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "generate a password for scratch org users",
      "longDescription": "Generates a password for scratch org users. Targets the usernames listed with the --onbehalfof parameter or the --targetusername parameter. Defaults to the defaultusername.",
      "help": "Generates and sets a random password for one or more scratch org users.\n\nIf you haven’t set a default Dev Hub, or if your scratch org isn’t associated with your default Dev Hub, --targetdevhubusername is required.\n\nTo see a password that was previously generated, run \"sfdx force:user:display\".\n\nExamples:\n   $ sfdx force:user:password:generate\n   $ sfdx force:user:password:generate -u me@my.org --json\n   $ sfdx force:user:password:generate -o user1@my.org,user2@my.org,user3@my.org",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "onbehalfof",
          "char": "o",
          "description": "comma-separated list of usernames for which to generate passwords",
          "longDescription": "A comma-separated list of usernames for which to generate passwords.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "password:generate",
      "topic": "force:user",
      "supportsTargetDevHubUsername": true,
      "usage": "force:user:password:generate [-o <string>...] [-u <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "assign a permission set to one or more users of an org",
      "longDescription": "Assigns a named permission set to one or more users of an org.",
      "help": "Defaults to the defaultusername.\n\nExamples:\n   $ sfdx force:user:permset:assign -n DreamHouse\n   $ sfdx force:user:permset:assign -n DreamHouse -u me@my.org\n   $ sfdx force:user:permset:assign -n DreamHouse -o user1@my.org,user2,user3",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "permsetname",
          "char": "n",
          "description": "the name of the permission set to assign",
          "longDescription": "The name of the permission set to assign.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "onbehalfof",
          "char": "o",
          "description": "comma-separated list of usernames or aliases to assign the permission set to",
          "longDescription": "Comma-separated list of usernames or aliases to assign the permission set to.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "permset:assign",
      "topic": "force:user",
      "supportsTargetDevHubUsername": false,
      "usage": "force:user:permset:assign -n <string> [-o <string>...] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "pull source from the scratch org to the project",
      "longDescription": "Pulls changed source from the scratch org to your project to keep them in sync.",
      "help": "If the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.",
      "showProgress": true,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: 33) (default:33, min:1)",
          "longDescription": "The number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.",
          "required": false,
          "hasValue": true,
          "type": "minutes",
          "default": 33,
          "min": 1
        },
        {
          "name": "forceoverwrite",
          "char": "f",
          "description": "ignore conflict warnings and overwrite changes to the project",
          "longDescription": "Runs the pull command even if conflicts exist. Changes in the scratch org overwrite changes in the project.",
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "pull",
      "topic": "force:source",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:source:pull [-w <minutes>] [-f] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "push source to an org from the project",
      "longDescription": "Pushes changed source from your project to the scratch org to keep them in sync.",
      "help": "If the command detects a conflict, it displays the conflicts but does not complete the process. After reviewing the conflict, rerun the command with the --forceoverwrite parameter.",
      "showProgress": true,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "forceoverwrite",
          "char": "f",
          "description": "ignore conflict warnings and overwrite changes to scratch org",
          "longDescription": "Runs the push command even if conflicts exist. Changes in the project overwrite changes in the scratch org.",
          "required": false,
          "type": "flag"
        },
        {
          "name": "ignorewarnings",
          "char": "g",
          "description": "deploy changes even if warnings are generated",
          "longDescription": "Completes the deployment even if warnings are generated.",
          "required": false,
          "type": "flag"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: 33) (default:33, min:1)",
          "longDescription": "Number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.",
          "required": false,
          "hasValue": true,
          "type": "minutes",
          "default": 33,
          "min": 1
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "push",
      "topic": "force:source",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:source:push [-f] [-g] [-w <minutes>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "record:create",
      "description": "create a record",
      "longDescription": "Creates and inserts a record.",
      "help": "The format of a field-value pair is <fieldName>=<value>.\nEnclose all field-value pairs in one set of double quotation marks, delimited by spaces.\nEnclose values that contain spaces in single quotes.\n\nExamples:\n   $ sfdx force:data:record:create -s Account -v \"Name=Acme\"\n   $ sfdx force:data:record:create -s Account -v \"Name='Universal Containers'\"\n   $ sfdx force:data:record:create -s Account -v \"Name='Universal Containers' Website=www.example.com\"\n   $ sfdx force:data:record:create -t -s TraceFlag -v \"DebugLevelId=7dl170000008U36AAE StartDate=2017-12-01T00:26:04.000+0000 ExpirationDate=2017-12-01T00:56:04.000+0000 LogType=CLASS_TRACING TracedEntityId=01p17000000R6bLAAS\"\n   $ sfdx force:data:record:create -s Account -v \"Name=Acme\" --perfloglevel \"basic\" --json",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the type of the record you’re creating",
          "longDescription": "The sObject type of the record you’re creating."
        },
        {
          "name": "values",
          "char": "v",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the <fieldName>=<value> pairs you’re creating",
          "longDescription": "The <fieldName>=<value> pairs you’re creating."
        },
        {
          "name": "usetoolingapi",
          "char": "t",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "create the record with tooling api",
          "longDescription": "Create the record using Tooling API."
        },
        {
          "name": "perfloglevel",
          "description": "get API performance data. (basic*,detailed)",
          "longDescription": "Gets data on API performance metrics from the server. The data is stored in $HOME/.sfdx/apiPerformanceLog.json",
          "required": false,
          "hasValue": true,
          "values": [
            "basic",
            "detailed"
          ],
          "default": "basic",
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "supportsPerfLogLevelFlag": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:record:create -s <string> -v <string> [-t] [--perfloglevel <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "record:delete",
      "description": "delete a record",
      "longDescription": "Deletes a single record.",
      "help": "Specify an sObject type and either an ID or a list of <fieldName>=<value> pairs.\nThe format of a field-value pair is <fieldName>=<value>.\nEnclose all field-value pairs in one set of double quotation marks, delimited by spaces.\nEnclose values that contain spaces in single quotes.\n\nExamples:\n   $ sfdx force:data:record:delete -s Account -i 001D000000Kv3dl\n   $ sfdx force:data:record:delete -s Account -w \"Name=Acme\"\n   $ sfdx force:data:record:delete -s Account -w \"Name='Universal Containers'\"\n   $ sfdx force:data:record:delete -s Account -w \"Name='Universal Containers' Phone='(123) 456-7890'\"\n   $ sfdx force:data:record:delete -t -s TraceFlag -i 7tf170000009cU6AAI --perfloglevel \"basic\" --json",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the type of the record you’re deleting",
          "longDescription": "The sObject type of the record you’re deleting."
        },
        {
          "name": "sobjectid",
          "char": "i",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "id",
          "description": "the ID of the record you’re deleting",
          "longDescription": "The ID of the record you’re deleting."
        },
        {
          "name": "where",
          "char": "w",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "string",
          "description": "a list of <fieldName>=<value> pairs to search for",
          "longDescription": "A list of <fieldName>=<value> pairs to search for."
        },
        {
          "name": "usetoolingapi",
          "char": "t",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "delete the record with Tooling API",
          "longDescription": "Delete the record using Tooling API."
        },
        {
          "name": "perfloglevel",
          "description": "get API performance data. (basic*,detailed)",
          "longDescription": "Gets data on API performance metrics from the server. The data is stored in $HOME/.sfdx/apiPerformanceLog.json",
          "required": false,
          "hasValue": true,
          "values": [
            "basic",
            "detailed"
          ],
          "default": "basic",
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "supportsPerfLogLevelFlag": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:record:delete -s <string> [-i <id>] [-w <string>] [-t] [--perfloglevel <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "record:get",
      "description": "view a record",
      "longDescription": "Displays a single record.",
      "help": "Specify an sObject type and either an ID or a list of <fieldName>=<value> pairs.\nThe format of a field-value pair is <fieldName>=<value>.\nEnclose all field-value pairs in one set of double quotation marks, delimited by spaces.\nEnclose values that contain spaces in single quotes.\n\nExamples:\n   $ sfdx force:data:record:get -s Account -i 001D000000Kv3dl\n   $ sfdx force:data:record:get -s Account -w \"Name=Acme\"\n   $ sfdx force:data:record:get -s Account -w \"Name='Universal Containers'\"\n   $ sfdx force:data:record:get -s Account -w \"Name='Universal Containers' Phone='(123) 456-7890'\"\n   $ sfdx force:data:record:get -t -s TraceFlag -i 7tf170000009cUBAAY --perfloglevel \"basic\" --json",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the type of the record you’re retrieving",
          "longDescription": "The sObject type of the record you’re retrieving."
        },
        {
          "name": "sobjectid",
          "char": "i",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "id",
          "description": "the ID of the record you’re retrieving",
          "longDescription": "The ID of the record you’re retrieving."
        },
        {
          "name": "where",
          "char": "w",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "string",
          "description": "a list of <fieldName>=<value> pairs to search for",
          "longDescription": "A list of <fieldName>=<value> pairs to search for."
        },
        {
          "name": "usetoolingapi",
          "char": "t",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "retrieve the record with Tooling API",
          "longDescription": "Retrieve the record using Tooling API."
        },
        {
          "name": "perfloglevel",
          "description": "get API performance data. (basic*,detailed)",
          "longDescription": "Gets data on API performance metrics from the server. The data is stored in $HOME/.sfdx/apiPerformanceLog.json",
          "required": false,
          "hasValue": true,
          "values": [
            "basic",
            "detailed"
          ],
          "default": "basic",
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "supportsPerfLogLevelFlag": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:record:get -s <string> [-i <id>] [-w <string>] [-t] [--perfloglevel <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "record:update",
      "description": "update a record",
      "longDescription": "Updates a single record.",
      "help": "The format of a field-value pair is <fieldName>=<value>.\nEnclose all field-value pairs in one set of double quotation marks, delimited by spaces.\nEnclose values that contain spaces in single quotes.\n\nExamples:\n   $ sfdx force:data:record:update -s Account -i 001D000000Kv3dl -v \"Name=NewAcme\"\n   $ sfdx force:data:record:update -s Account -w \"Name='Old Acme'\" -v \"Name='New Acme'\"\n   $ sfdx force:data:record:update -s Account -i 001D000000Kv3dl -v \"Name='Acme III' Website=www.example.com\"\n   $ sfdx force:data:record:update -t -s TraceFlag -i 7tf170000009cUBAAY -v \"ExpirationDate=2017-12-01T00:58:04.000+0000\"\n   $ sfdx force:data:record:update -s Account -i 001D000000Kv3dl -v \"Name=NewAcme\" --perfloglevel \"basic\" --json",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the type of the record you’re updating",
          "longDescription": "The sObject type of the record you’re updating."
        },
        {
          "name": "sobjectid",
          "char": "i",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "id",
          "description": "the ID of the record you’re updating",
          "longDescription": "The ID of the record you’re updating."
        },
        {
          "name": "where",
          "char": "w",
          "hasValue": true,
          "required": false,
          "hidden": false,
          "type": "string",
          "description": "a list of <fieldName>=<value> pairs to search for",
          "longDescription": "A list of <fieldName>=<value> pairs to search for."
        },
        {
          "name": "values",
          "char": "v",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the <fieldName>=<value> pairs you’re updating",
          "longDescription": "The <fieldName>=<value> pairs you’re updating."
        },
        {
          "name": "usetoolingapi",
          "char": "t",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "update the record with Tooling API",
          "longDescription": "Update the record using Tooling API."
        },
        {
          "name": "perfloglevel",
          "description": "get API performance data. (basic*,detailed)",
          "longDescription": "Gets data on API performance metrics from the server. The data is stored in $HOME/.sfdx/apiPerformanceLog.json",
          "required": false,
          "hasValue": true,
          "values": [
            "basic",
            "detailed"
          ],
          "default": "basic",
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "supportsPerfLogLevelFlag": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:record:update -s <string> -v <string> [-i <id>] [-w <string>] [-t] [--perfloglevel <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve metadata from an org using Metadata API",
      "longDescription": "Uses Metadata API to retrieve a .zip of XML files that represent metadata from the targeted org. The default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.",
      "help": "The default target username is the admin user for the default scratch org. You can retrieve and deploy up to 10,000 files or 400 MB (39 MB compressed) at one time.\n\nTo retrieve a package with a space in its name, enclose the name in single quotes.\n\nExample:\n   $ sfdx force:mdapi:retrieve -s -r ./mdapipkg -u <username> -p 'My Package'",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "apiversion",
          "char": "a",
          "description": "target API version for the retrieve (default 42.0)",
          "longDescription": "Use to override the default, which is the latest version supported by your CLI plug-in, with the version in your package.xml file.",
          "required": false,
          "hasValue": true,
          "type": "number"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: -1 (no limit))",
          "longDescription": "The number of minutes to wait for the command to complete. -1",
          "required": false,
          "hasValue": true,
          "type": "minutes"
        },
        {
          "name": "retrievetargetdir",
          "char": "r",
          "description": "directory root for the retrieved files",
          "longDescription": "The root of the directory structure where the retrieved .zip or metadata files are put.",
          "required": true,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "unpackaged",
          "char": "k",
          "description": "file path of manifest of components to retrieve",
          "longDescription": "The complete path for the manifest file that specifies the components to retrieve.",
          "required": false,
          "hasValue": true,
          "type": "filepath"
        },
        {
          "name": "sourcedir",
          "char": "d",
          "description": "source dir to use instead of default manifest sfdx-project.xml",
          "longDescription": "The source directory to use instead of the default manifest specified in sfdx-config.json.",
          "required": false,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "packagenames",
          "char": "p",
          "description": "a comma-separated list of packages to retrieve",
          "longDescription": "A comma-separated list of package names to retrieve.",
          "required": false,
          "hasValue": true,
          "array": true,
          "type": "string"
        },
        {
          "name": "singlepackage",
          "char": "s",
          "description": "a single-package retrieve (default: false)",
          "longDescription": "Specifies whether only a single package is being retrieved (true) or more than one package (false).",
          "required": false,
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "jobid",
          "char": "i",
          "description": "WARNING: The flag \"jobid\" has been deprecated and will be removed in v41.01.0 or later. Instead, use \"sfdx force:mdapi:retrieve:report -i <jobId> -r <targetDir>\".",
          "longDescription": "The job ID (asyncId) of the retrieve you want to check. You must specify a --retrievetargetdir. Use with --wait to resume waiting.",
          "required": false,
          "hasValue": true,
          "type": "id",
          "deprecated": {
            "message": "Instead, use \"sfdx force:mdapi:retrieve:report -i <jobId> -r <targetDir>\".",
            "version": "41.0"
          }
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "verbose output of retrieve result",
          "longDescription": "Indicates that you want verbose output from the retrieve operation.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "retrieve",
      "topic": "force:mdapi",
      "supportsTargetDevHubUsername": false,
      "usage": "force:mdapi:retrieve -r <directory> [-a <number>] [-w <minutes>] [-k <filepath>] [-d <directory>] [-p <string>...] [-s] [-i <id>] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "check the status of a metadata retrieval",
      "longDescription": "Check the status of an asynchronous metadata retrieval.",
      "help": "Specify the job ID and a target directory for the retrieve you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status. If the retrieve was successful, the resulting zip file will be saved to the location passed in with the retrieve target parameter.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "wait",
          "char": "w",
          "description": "wait time for command to finish in minutes (default: -1 (no limit))",
          "longDescription": "The number of minutes to wait for the command to complete. -1",
          "required": false,
          "hasValue": true,
          "type": "minutes"
        },
        {
          "name": "retrievetargetdir",
          "char": "r",
          "description": "directory root for the retrieved files",
          "longDescription": "The root of the directory structure where the retrieved .zip or metadata files are put.",
          "required": false,
          "hasValue": true,
          "type": "directory"
        },
        {
          "name": "jobid",
          "char": "i",
          "description": "job ID of the retrieve you want to check",
          "longDescription": "The job ID (asyncId) of the retrieve you want to check. You must specify a --retrievetargetdir. Use with --wait to resume waiting.",
          "required": false,
          "hasValue": true,
          "type": "id"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "verbose output of retrieve result",
          "longDescription": "Indicates that you want verbose output from the retrieve operation.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "retrieve:report",
      "topic": "force:mdapi",
      "supportsTargetDevHubUsername": false,
      "usage": "force:mdapi:retrieve:report [-w <minutes>] [-r <directory>] [-i <id>] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "set username aliases for the Salesforce CLI",
      "longDescription": "Sets an alias that the Salesforce CLI can use for various commands and tasks.",
      "help": "You can associate an alias with only one username at a time. If you’ve set an alias multiple times, the alias points to the most recent username.\n\nTo delete an alias, run \"sfdx force:alias:set\" with no username.\n\nExamples:\n   $ sfdx force:alias:set DefaultOrg=me@my.org\n   $ sfdx force:alias:set DefaultOrg=me@my.org DevHubOrg=me@myhub.org\n   $ sfdx force:alias:set AliasToDelete=",
      "requiresProject": false,
      "variableArgs": true,
      "variableArgsRequired": true,
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "set",
      "topic": "force:alias",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:alias:set name=value... [--json] [--loglevel <string>]"
    },
    {
      "description": "set config vars for the Salesforce CLI",
      "longDescription": "Sets the local and global configuration variables for the Salesforce CLI.",
      "help": "Sets the configuration variables that the Salesforce CLI uses for various commands and tasks. Local variables apply only to your current project. Global variables apply in any directory.\n\nExamples:\n   $ sfdx force:config:set defaultusername=me@my.org defaultdevhubusername=me@myhub.org\n   $ sfdx force:config:set defaultdevhubusername=me@myhub.org -g",
      "requiresProject": false,
      "variableArgs": true,
      "variableArgsRequired": true,
      "flags": [
        {
          "name": "global",
          "char": "g",
          "description": "set config var globally (to be used from any directory)",
          "longDescription": "Sets the configuration variables globally, so they can be used from any directory.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "set",
      "topic": "force:config",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:config:set name=value... [-g] [--json] [--loglevel <string>]"
    },
    {
      "description": "authorize an org using an SFDX auth URL",
      "longDescription": "Authorizes a Salesforce org using an SFDX auth URL.",
      "help": "Authorize a Salesforce org using an SFDX auth URL stored within a file.\nThe file must have the format \"force://<refreshToken>@<instanceUrl>\" or \"force://<clientId>:<clientSecret>:<refreshToken>@<instanceUrl>\".\nThe file must contain only the URL or be a JSON file that has a top-level property named sfdxAuthUrl.\n\nExamples:\n   $ sfdx force:auth:sfdxurl:store -f <path to sfdxAuthUrl file>\n   $ sfdx force:auth:sfdxurl:store -f <path to sfdxAuthUrl file> -s -a MyDefaultOrg",
      "requiresProject": false,
      "flags": [
        {
          "name": "sfdxurlfile",
          "char": "f",
          "description": "path to a file containing the sfdx url",
          "longDescription": "Path to a file containing the SFDX URL.",
          "hasValue": true,
          "required": true,
          "type": "filepath"
        },
        {
          "name": "setdefaultdevhubusername",
          "char": "d",
          "description": "set the authenticated org as the default dev hub org for scratch org creation",
          "longDescription": "Sets the authenticated org as the default Dev Hub org for scratch org creation.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setdefaultusername",
          "char": "s",
          "description": "set the authenticated org as the default username that all commands run against",
          "longDescription": "Sets the authenticated org as the default username that all commands run against.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setalias",
          "char": "a",
          "description": "set an alias for the authenticated org",
          "longDescription": "Sets an alias for the authenticated org.",
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "sfdxurl:store",
      "topic": "force:auth",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:auth:sfdxurl:store -f <filepath> [-d] [-s] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "create a snapshot of org edition, features, and licenses",
      "longDescription": "Creates a snapshot of org edition, features, and licenses to use for scratch org creation, allowing your scratch org to look like another org for testing.",
      "help": "Examples:\n   $ sfdx force:org:shape:create -u me@my.org\n   $ sfdx force:org:shape:create -u me@my.org --json --loglevel debug",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "command": "shape:create",
      "topic": "force:org",
      "flags": [
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:shape:create [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "delete all org shapes for a target org",
      "longDescription": "Deletes all org shapes that you’ve created for an org using the Salesforce CLI.",
      "help": "Examples:\n   $ sfdx force:org:shape:delete -u me@my.org\n   $ sfdx force:org:shape:delete -u MyOrgAlias -p\n   $ sfdx force:org:shape:delete -u me@my.org --json\n   $ sfdx force:org:shape:delete -u me@my.org -p --json > tmp/MyOrgShapeDelete.json",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "noprompt",
          "char": "p",
          "description": "do not prompt for confirmation",
          "longDescription": "Do not prompt for confirmation.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username for the target org",
          "longDescription": "Username for the target org.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "shape:delete",
      "topic": "force:org",
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:shape:delete -u <string> [-p] [--json] [--loglevel <string>]"
    },
    {
      "description": "list all org shapes you’ve created",
      "longDescription": "Lists all org shapes that you’ve created using the Salesforce CLI.",
      "help": "Examples:\n   $ sfdx force:org:shape:list\n   $ sfdx force:org:shape:list --json\n   $ sfdx force:org:shape:list --json > tmp/MyOrgShapeList.json",
      "requiresProject": false,
      "flags": [
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "list more information about each org shape",
          "longDescription": "Lists more information about each org shape.",
          "hasValue": false,
          "hidden": true,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "shape:list",
      "topic": "force:org",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:org:shape:list [--json] [--loglevel <string>]"
    },
    {
      "command": "sobject:describe",
      "description": "describe an object",
      "longDescription": "Displays the metadata for a standard or custom object.",
      "help": "Examples:\n   $ sfdx force:schema:sobject:describe -s Account\n   $ sfdx force:schema:sobject:describe -s MyObject__c",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttype",
          "char": "s",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the API name of the object to describe",
          "longDescription": "The API name of the object to describe."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:schema",
      "supportsTargetDevHubUsername": false,
      "usage": "force:schema:sobject:describe -s <string> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "sobject:list",
      "description": "list all objects of a specified category",
      "longDescription": "Lists all objects of a specified sObject category.",
      "help": "Lists all objects, custom objects, or standard objects in the org.\n\nExamples:\n   $ sfdx force:schema:sobject:list -c all\n   $ sfdx force:schema:sobject:list -c custom\n   $ sfdx force:schema:sobject:list -c standard",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "sobjecttypecategory",
          "char": "c",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "the type of objects to list (all|custom|standard)",
          "longDescription": "The type of objects to list: all, custom, or standard."
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "topic": "force:schema",
      "supportsTargetDevHubUsername": false,
      "usage": "force:schema:sobject:list -c <string> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "soql:query",
      "description": "execute a SOQL query",
      "longDescription": "Executes a SOQL query.",
      "help": "When you execute this command in a project, it executes the query against the data in your default scratch org.\n\nExamples:\n   $ sfdx force:data:soql:query -q \"SELECT Id, Name, Account.Name FROM Contact\"\n   $ sfdx force:data:soql:query -q \"SELECT Id, Name FROM Account WHERE ShippingState IN ('CA', 'NY')\"\n   $ sfdx force:data:soql:query -q \"SELECT Name FROM ApexTrigger\" -t\n   $ sfdx force:data:soql:query -q \"SELECT Name FROM ApexTrigger\" --perfloglevel \"basic\" --json",
      "requiresProject": false,
      "args": [],
      "flags": [
        {
          "name": "query",
          "char": "q",
          "hasValue": true,
          "required": true,
          "hidden": false,
          "type": "string",
          "description": "SOQL query to execute",
          "longDescription": "SOQL query to execute."
        },
        {
          "name": "usetoolingapi",
          "char": "t",
          "hasValue": false,
          "required": false,
          "hidden": false,
          "type": "flag",
          "description": "execute query with Tooling API",
          "longDescription": "Execute the query using Tooling API."
        },
        {
          "name": "resultformat",
          "char": "r",
          "description": "query result format emitted to stdout; --json flag overrides this parameter (human*,csv,json)",
          "longDescription": "Format to use when displaying query results. If you also specify the --json flag, --json overrides this parameter.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "human",
            "csv",
            "json"
          ],
          "default": "human"
        },
        {
          "name": "perfloglevel",
          "description": "get API performance data. (basic*,detailed)",
          "longDescription": "Gets data on API performance metrics from the server. The data is stored in $HOME/.sfdx/apiPerformanceLog.json",
          "required": false,
          "hasValue": true,
          "values": [
            "basic",
            "detailed"
          ],
          "default": "basic",
          "type": "string"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": true,
      "supportsPerfLogLevelFlag": true,
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:soql:query -q <string> [-t] [-r <string>] [--perfloglevel <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "list local changes and/or changes in a scratch org",
      "longDescription": "Lists changes that have been made locally, in a scratch org, or both.",
      "help": "Examples:\n   $ sfdx force:source:status -l\n   $ sfdx force:source:status -r\n   $ sfdx force:source:status -a\n   $ sfdx force:source:status -a -u me@my.org --json",
      "showProgress": true,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "all",
          "char": "a",
          "description": "list all the changes that have been made",
          "longDescription": "Lists all the changes that have been made.",
          "required": false,
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "local",
          "char": "l",
          "description": "list the changes that have been made locally",
          "longDescription": "Lists the changes that have been made locally.",
          "required": false,
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "remote",
          "char": "r",
          "description": "list the changes that have been made in the scratch org",
          "longDescription": "Lists the changes that have been made in the scratch org.",
          "required": false,
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "status",
      "topic": "force:source",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:source:status [-a] [-l] [-r] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "test:create",
      "description": "create a Lightning test",
      "longDescription": "Creates a Lightning test in the specified directory or the current working directory. The .resource file and associated metadata file are created.",
      "help": "The outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:lightning:test:create -n MyLightningTest\n   $ sfdx force:lightning:test:create -n MyLightningTest -d lightningTests\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "testname",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Lightning test",
          "longDescription": "The name of the new Lightning test. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (DefaultLightningTest*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "DefaultLightningTest"
          ],
          "default": "DefaultLightningTest"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:lightning",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:test:create -n <string> [-t <string>] [-d <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "install Lightning Testing Service unmanaged package in your org",
      "longDescription": "Installs a Lightning Testing Service (LTS) unmanaged package into your org.",
      "help": "Examples:\n   $ sfdx force:lightning:test:install\n   $ sfdx force:lightning:test:install -w 0 -r v1.0\n   $ sfdx force:lightning:test:install -t jasmine",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "wait",
          "char": "w",
          "description": "number of minutes to wait for installation status (default:2)",
          "longDescription": "Maximum number of minutes to wait for installation status.",
          "hasValue": true,
          "required": false,
          "type": "minutes",
          "default": 2
        },
        {
          "name": "releaseversion",
          "char": "r",
          "description": "release version of Lightning Testing Service (default:latest)",
          "longDescription": "The release version of LTS unmanaged package you want to install.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "default": "latest"
        },
        {
          "name": "packagetype",
          "char": "t",
          "description": "type of unmanaged package. 'full' option contains both jasmine and mocha, plus examples (full*,jasmine,mocha)",
          "longDescription": "Type of LTS unmanaged package to install. 'jasmine' and 'mocha' contains the essentials for development, 'full' contains both, and adds sample components and tests in the package. 'full' is best for 'kicking the tires' of LTS.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "jasmine",
            "mocha",
            "full"
          ],
          "default": "full"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "test:install",
      "topic": "force:lightning",
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:test:install [-w <minutes>] [-r <string>] [-t <string>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "display test results",
      "longDescription": "Displays the test results for a specific test run.",
      "help": "Displays test results for an enqueued or completed asynchronous Apex test run.\n\nExamples:\n   $ sfdx force:apex:test:report -i <test run id>\n   $ sfdx force:apex:test:report -i <test run id> -r junit\n   $ sfdx force:apex:test:report -i <test run id> -c --json",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "testrunid",
          "char": "i",
          "description": "ID of test run",
          "longDescription": "The ID of test run.",
          "required": true,
          "hasValue": true,
          "type": "id"
        },
        {
          "name": "codecoverage",
          "char": "c",
          "description": "retrieve code coverage results",
          "longDescription": "Retrieves code coverage results.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "directory to store test run files",
          "longDescription": "Directory to store test run files.",
          "hasValue": true,
          "required": false,
          "type": "directory"
        },
        {
          "name": "resultformat",
          "char": "r",
          "description": "test result format emitted to stdout; --json flag overrides this parameter (human*,tap,junit,json)",
          "longDescription": "Format to use when displaying test results. If you also specify the --json flag, --json overrides this parameter.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "human",
            "tap",
            "junit",
            "json"
          ],
          "default": "human"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "the streaming client socket timeout (in minutes) (default:6, min:2)",
          "longDescription": "Sets the streaming client socket timeout, in minutes.If the streaming client socket has no contact from the server for a number of minutes, the client exits. Specify a longer wait time if timeouts occur frequently.",
          "hasValue": true,
          "required": false,
          "type": "minutes",
          "min": 2,
          "default": 6
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "display Apex test processing details",
          "longDescription": "Displays Apex test processing details. If JSON format is specified, processing details aren’t displayed.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "test:report",
      "topic": "force:apex",
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:test:report -i <id> [-c] [-d <directory>] [-r <string>] [-w <minutes>] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "invoke Apex tests",
      "longDescription": "Runs Apex tests.",
      "help": "By default, runs all Apex tests in the org’s namespace.\nTo run specific tests, specify the class names or suite names or set a --testlevel value.\n\nExamples:\n   $ sfdx force:apex:test:run\n   $ sfdx force:apex:test:run -n MyClassTest,MyOtherClassTest -r human\n   $ sfdx force:apex:test:run -s MySuite,MyOtherSuite -c --json\n   $ sfdx force:apex:test:run -l RunLocalTests -d <path to outputdir> -u me@my.org",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "classnames",
          "char": "n",
          "description": "comma-separated list of Apex test class names to execute",
          "longDescription": "Comma-separated list of Apex test class names to execute. You can’t specify both class names and suite names.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true,
          "xor": [
            "suitenames"
          ]
        },
        {
          "name": "suitenames",
          "char": "s",
          "description": "comma-separated list of Apex test suite names to execute",
          "longDescription": "Comma-separated list of Apex test suite names to execute. You can’t specify both class names and suite names.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true
        },
        {
          "name": "codecoverage",
          "char": "c",
          "description": "retrieve code coverage results",
          "longDescription": "Retrieves code coverage results.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "directory to store test run files",
          "longDescription": "Directory to store test run files.",
          "hasValue": true,
          "required": false,
          "type": "directory"
        },
        {
          "name": "testlevel",
          "char": "l",
          "description": "testlevel enum value (RunLocalTests,RunAllTestsInOrg,RunSpecifiedTests)",
          "longDescription": "Specifies which tests to run, using one of these TestLevel enum values:\nRunSpecifiedTests—Only the tests that you specify are run.\nRunLocalTests—All tests in your org are run, except the ones that originate from installed managed packages.\nRunAllTestsInOrg—All tests are in your org and in installed managed packages are run.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "RunLocalTests",
            "RunAllTestsInOrg",
            "RunSpecifiedTests"
          ]
        },
        {
          "name": "resultformat",
          "char": "r",
          "description": "test result format emitted to stdout; --json flag overrides this parameter (human*,tap,junit,json)",
          "longDescription": "Format to use when displaying test results. If you also specify the --json flag, --json overrides this parameter.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "human",
            "tap",
            "junit",
            "json"
          ],
          "default": "human"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "the streaming client socket timeout (in minutes) (default:6, min:2)",
          "longDescription": "Sets the streaming client socket timeout, in minutes.If the streaming client socket has no contact from the server for a number of minutes, the client exits. Specify a longer wait time if timeouts occur frequently.",
          "hasValue": true,
          "required": false,
          "type": "minutes",
          "hidden": true,
          "min": 2,
          "default": 6
        },
        {
          "name": "precompilewait",
          "description": "how long to wait (in minutes) for Apex pre-compilation (default:3, min:3)",
          "longDescription": "Specifies how long to wait (in minutes) for Apex pre-compilation to complete before running the tests or timing out.",
          "hasValue": true,
          "required": false,
          "type": "minutes",
          "hidden": true,
          "min": 3,
          "default": 3
        },
        {
          "name": "synchronous",
          "char": "y",
          "description": "run tests from a single class synchronously",
          "longDescription": "Runs test methods from a single Apex class synchronously. If you don't specify this flag, tests are run asynchronously.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "display Apex test processing details",
          "longDescription": "Displays Apex test processing details. If JSON format is specified, processing details aren’t displayed.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "test:run",
      "topic": "force:apex",
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:test:run (-n <string>... | -s <string>...) [-c] [-d <directory>] [-l <string>] [-r <string>] [-y] [-u <string>] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "invoke Lightning component tests",
      "longDescription": "Runs Lightning component tests. The Lightning Testing Service (LTS) unmanaged package must be installed in your org. For details, see the LTS documentation.",
      "help": "Examples:\n   $ sfdx force:lightning:test:run\n   $ sfdx force:lightning:test:run -a tests -r human\n   $ sfdx force:lightning:test:run -f config/myConfigFile.json -d testResultFolder",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "appname",
          "char": "a",
          "description": "name of your Lightning test application",
          "longDescription": "Name of your Lightning test application. The name is case insensitive, and \".app\" is optional, so \"Test\" and \"test.app\" are equivalent.\nDefault value: Test.app",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "directory path to store test run artifacts: for example, log files and test results",
          "longDescription": "Directory path to store test run artifacts: log files, test results, and so on.",
          "hasValue": true,
          "required": false,
          "type": "directory"
        },
        {
          "name": "resultformat",
          "char": "r",
          "description": "test result format emitted to stdout; --json flag overrides this parameter (human*,tap,junit,json)",
          "longDescription": "Format to use when displaying test results. If you also specify the --json flag, --json overrides this parameter.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "human",
            "tap",
            "junit",
            "json"
          ],
          "default": "human"
        },
        {
          "name": "configfile",
          "char": "f",
          "description": "path to config file for the test",
          "longDescription": "Path to a test configuration file to configure WebDriver and other settings. For details, see the LTS documentation.",
          "hasValue": true,
          "required": false,
          "type": "filepath"
        },
        {
          "name": "leavebrowseropen",
          "char": "o",
          "description": "leave browser open",
          "longDescription": "Leaves browser open after the test finishes so that you can view the test suite results.",
          "type": "flag",
          "hasValue": false,
          "required": false
        },
        {
          "name": "timeout",
          "char": "t",
          "description": "time (ms) to wait for results element in dom (default:60000)",
          "longDescription": "Time, in milliseconds, to wait for the results element to be present in the DOM, before failing and moving on to the next test.",
          "type": "number",
          "hasValue": true,
          "required": false,
          "default": 60000
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "test:run",
      "topic": "force:lightning",
      "supportsTargetDevHubUsername": false,
      "usage": "force:lightning:test:run [-a <string>] [-d <directory>] [-r <string>] [-f <filepath>] [-o] [-t <number>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "export data from an org into sObject tree format for force:data:tree:import consumption",
      "longDescription": "Exports data from an org into sObject tree format for force:data:tree:import consumption.",
      "help": "Generates JSON files for use with the force:data:tree:import command.\n\nExamples:\n   $ sfdx force:data:tree:export -q \"SELECT Id, Name, (SELECT Name, Address__c FROM Properties__r) FROM Broker__c\"\n   $ sfdx force:data:tree:export -q <path to file containing soql query> -x export-demo -d /tmp/sfdx-out -p\n\nFor more information and examples, run \"sfdx force:data:tree:import -h\".",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "query",
          "char": "q",
          "description": "soql query, or filepath of file containing a soql query, to retrieve records",
          "longDescription": "A SOQL query statement or the path of a file containing a SOQL query statement to retrieve the records to export.",
          "hasValue": true,
          "required": true,
          "type": "string"
        },
        {
          "name": "plan",
          "char": "p",
          "description": "generate mulitple sobject tree files and a plan definition file for aggregated import",
          "longDescription": "Generates multiple sObject tree files and a plan definition file for aggregated import.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "prefix",
          "char": "x",
          "description": "prefix of generated files",
          "longDescription": "Prefix of generated files.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "outputdir",
          "char": "d",
          "description": "directory to store files",
          "longDescription": "Directory to store generated files.",
          "hasValue": true,
          "required": false,
          "type": "directory"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "tree:export",
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:tree:export -q <string> [-p] [-x <string>] [-d <directory>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "import data into an org using SObject Tree Save API",
      "longDescription": "Imports data into an org using the SObject Tree Save API. This data can include master-detail relationships.",
      "help": "To generate JSON files for use with force:data:tree:import, run \"sfdx force:data:tree:export\".\n\nExamples:\nTo import records as individual files, first run the export commands:\n   $ sfdx force:data:tree:export -q \"SELECT Id, Name FROM Account\"\n   $ sfdx force:data:tree:export -q \"SELECT Id, LastName, FirstName FROM Contact\"\nThen run the import command:\n   $ sfdx force:data:tree:import -f Contact.json,Account.json -u me@my.org\n\nTo import multiple data files as part of a plan, first run the export command with the -p | --plan flag:\n   $ sfdx force:data:tree:export -p -q \"SELECT Id, Name, (SELECT Id, LastName, FirstName FROM Contacts) FROM Account\"\nThen run the import command, supplying a filepath value for the -p | --plan parameter:\n   $ sfdx force:data:tree:import -p Account-Contact-plan.json -u me@my.org",
      "schema": {
        "name": "dataImportPlanSchema.json",
        "flag": "plan"
      },
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "sobjecttreefiles",
          "char": "f",
          "description": "comma-delimited, ordered paths of json files containing collection of record trees to insert",
          "longDescription": "Comma-delimited, ordered paths of JSON files containing a collection of record trees to insert. Either --sobjecttreefiles or --plan is required.",
          "hasValue": true,
          "required": false,
          "type": "filepath",
          "array": true,
          "xor": [
            "plan"
          ]
        },
        {
          "name": "plan",
          "char": "p",
          "description": "path to plan to insert multiple data files that have master-detail relationships",
          "longDescription": "Path to plan to insert multiple data files that have master-detail relationships. Either --sobjecttreefiles or --plan is required.",
          "hasValue": true,
          "required": false,
          "type": "filepath"
        },
        {
          "name": "contenttype",
          "char": "c",
          "description": "if data file extension is not .json, provide content type (applies to all files)",
          "longDescription": "If the data file extension is not .json, provide the content type (applies to all files).",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "description": "display schema information for the --plan configuration file to stdout; if you use this option, all other options except --json are ignored",
          "name": "confighelp",
          "longDescription": "Displays the schema information for the configuration file. If you use this option, all other options, except --json, are ignored.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "tree:import",
      "topic": "force:data",
      "supportsTargetDevHubUsername": false,
      "usage": "force:data:tree:import (-f <filepath>... | -p <filepath>) [-c <string>] [--confighelp] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "command": "trigger:create",
      "description": "create an Apex trigger",
      "longDescription": "Creates an Apex trigger in the specified directory or the current working directory. If you don’t explicitly set the API version, it defaults to the current API version. The .trigger file and associated metadata file are created.",
      "help": "If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\n\nExamples:\n   $ sfdx force:apex:trigger:create -n MyTrigger\n   $ sfdx force:apex:trigger:create -n MyTrigger -s Account -e 'before insert, after upsert'\n   $ sfdx force:apex:trigger:create -n MyTrigger -d triggers\n",
      "hidden": false,
      "args": [],
      "flags": [
        {
          "name": "triggername",
          "char": "n",
          "hasValue": true,
          "required": true,
          "description": "name of the generated Apex trigger",
          "longDescription": "The name of the new Apex trigger. The name can be up to 40 characters and must start with a letter.",
          "type": "string",
          "values": []
        },
        {
          "name": "template",
          "char": "t",
          "hasValue": true,
          "required": false,
          "description": "template to use for file creation (ApexTrigger*)",
          "longDescription": "The template to use to create the file. Supplied parameter values or default values are filled into a copy of the template.",
          "type": "string",
          "values": [
            "ApexTrigger"
          ],
          "default": "ApexTrigger"
        },
        {
          "name": "outputdir",
          "char": "d",
          "hasValue": true,
          "required": false,
          "description": "folder for saving the created files",
          "longDescription": "The directory to store the newly created files. The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "type": "string",
          "values": []
        },
        {
          "name": "reflect",
          "char": "r",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "description": "switch to return flag detailed information",
          "longDescription": "Return reflection description of the command, options, and possible values. Allows IDE to tailor to the capabilities of the command",
          "type": "string",
          "values": []
        },
        {
          "name": "apiversion",
          "char": "a",
          "hasValue": true,
          "required": false,
          "description": "API version number (42.0*,41.0)",
          "longDescription": "The API version of the created source.",
          "type": "string",
          "values": [
            "42.0",
            "41.0"
          ],
          "default": "42.0"
        },
        {
          "name": "sobject",
          "char": "s",
          "hasValue": true,
          "required": false,
          "description": "sObject to create a trigger on (SOBJECT*)",
          "longDescription": "The sObject to create an Apex trigger on.",
          "type": "string",
          "values": [],
          "default": "SOBJECT"
        },
        {
          "name": "triggerevents",
          "char": "e",
          "hasValue": true,
          "required": false,
          "description": "events that fire the trigger (before insert*,before upsert,before delete,after insert,after upsert,after delete,after undelete)",
          "longDescription": "The events that cause the trigger to fire.",
          "type": "string",
          "array": true,
          "values": [
            "before insert",
            "before upsert",
            "before delete",
            "after insert",
            "after upsert",
            "after delete",
            "after undelete"
          ],
          "default": "before insert"
        },
        {
          "name": "json",
          "description": "JSON output",
          "longDescription": "Formats output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "string",
          "values": []
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportedGlobals": [],
      "requiresProject": false,
      "topic": "force:apex",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:apex:trigger:create -n <string> [-t <string>] [-d <string>] [-a <string>] [-s <string>] [-e <string>...] [--json] [--loglevel <string>]"
    },
    {
      "description": "uninstall a second-generation package from the target org",
      "longDescription": "Uninstalls a second-generation package from the target org. To uninstall a first-generation package, use the Salesforce user interface.",
      "help": "Specify the package ID for a second-generation package.\n\nExamples:\n   $ sfdx force:package:uninstall --id 04t...\n   $ sfdx force:package:uninstall -i 04t... -u <username of target org>\n\nTo list the org’s installed packages, run \"package:installed:list\".\n\nTo uninstall a first-generation package, from Setup, enter Installed Packages in the Quick Find box, then select Installed Packages.",
      "orgType": "defaultusername",
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "id",
          "char": "i",
          "description": "ID of the package to uninstall (starts with 04t)",
          "longDescription": "The ID of the second-generation package to uninstall (starts with 04t).",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "number of minutes to wait for uninstall status",
          "longDescription": "Maximum number of minutes to wait for uninstall status. The default is 0.",
          "hasValue": true,
          "required": false,
          "type": "minutes"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "uninstall",
      "topic": "force:package",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:package:uninstall -i <id> [-w <minutes>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve status of package uninstall request",
      "longDescription": "Retrieves the status of a package uninstall request.",
      "help": "Displays the status of a package uninstall request.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "requestid",
          "char": "i",
          "description": "ID of the package uninstall request you want to check",
          "longDescription": "The ID of the package uninstall request you want to check.",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "uninstall:get",
      "topic": "force:package",
      "supportsTargetDevHubUsername": false,
      "usage": "force:package:uninstall:get -i <id> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "update a second-generation package",
      "longDescription": "Updates a second-generation package.",
      "help": "Specify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package2:update --package2id 0Ho... --name 'AAnalytics'\n   $ sfdx force:package2:update -i 0Ho... -d 'Advanced Analytics'\n\nRun 'sfdx force:package2:list' to list all second-generation packages in the Dev Hub org.",
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "package2id",
          "char": "i",
          "description": "id of the package (starts with 0Ho)",
          "longDescription": "ID of package (starts with 0Ho).",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "name",
          "char": "n",
          "description": "package name",
          "longDescription": "Name of the package to update.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "description",
          "char": "d",
          "description": "package description",
          "longDescription": "Description of the package.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "update",
      "topic": "force:package2",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "usage": "force:package2:update -i <id> [-n <string>] [-d <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "update project config files to the latest format",
      "longDescription": "Updates project configuration and definition files to the latest format.",
      "help": "Examples:\n $   sfdx force:project:upgrade\n $   sfdx force:project:upgrade -f",
      "requiresProject": false,
      "flags": [
        {
          "name": "forceupgrade",
          "char": "f",
          "description": "run all upgrades even if project has already been upgraded",
          "longDescription": "Run all upgrades, even if the project definition files have already been upgraded.",
          "required": false,
          "type": "flag"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "upgrade",
      "topic": "force:project",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:project:upgrade [-f] [--json] [--loglevel <string>]"
    },
    {
      "description": "create a first-generation package version in the release org",
      "longDescription": "Creates a first-generation package version in the release org.",
      "help": "The package version is based on the contents of the specified metadata package. Omit -m if you want to create an unmanaged package version.",
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "packageid",
          "char": "i",
          "description": "ID of the metadata package (starts with 033) of which you’re creating a new version",
          "longDescription": "ID of the metadata package (starts with 033) of which you’re creating a new version.",
          "type": "id",
          "hasValue": true,
          "required": true
        },
        {
          "name": "name",
          "char": "n",
          "description": "package version name",
          "longDescription": "Package version name.",
          "type": "string",
          "hasValue": true,
          "required": true
        },
        {
          "name": "description",
          "char": "d",
          "description": "package version description",
          "longDescription": "Package version description.",
          "type": "string",
          "hasValue": true,
          "required": false
        },
        {
          "name": "version",
          "char": "v",
          "description": "package version in major.minor format, for example, 3.2",
          "longDescription": "Package version in major.minor format, for example, 3.2.",
          "type": "string",
          "hasValue": true,
          "required": false
        },
        {
          "name": "managedreleased",
          "char": "m",
          "description": "create a managed package version",
          "longDescription": "Creates a managed package version. To create a beta version, don’t include this parameter.",
          "type": "flag",
          "hasValue": false,
          "required": false
        },
        {
          "name": "releasenotesurl",
          "char": "r",
          "description": "release notes URL",
          "longDescription": "Release notes URL.",
          "type": "url",
          "hasValue": true,
          "required": false
        },
        {
          "name": "postinstallurl",
          "char": "p",
          "description": "post install URL",
          "longDescription": "Post install URL.",
          "type": "url",
          "hasValue": true,
          "required": false
        },
        {
          "name": "installationkey",
          "char": "k",
          "description": "installation key for key-protected package (default: null)",
          "longDescription": "Installation key for creating the key-protected package. The default is null.",
          "type": "string",
          "hasValue": true,
          "required": false
        },
        {
          "name": "wait",
          "char": "w",
          "description": "minutes to wait for the package version to be created (default: 2 minutes)",
          "longDescription": "Minutes to wait for the package version to be created. The default is 2 minutes.",
          "type": "number",
          "hasValue": true,
          "required": false
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:create",
      "topic": "force:package1",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:package1:version:create -i <id> -n <string> [-d <string>] [-v <string>] [-m] [-r <url>] [-p <url>] [-k <string>] [-w <number>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "create a second-generation package version",
      "longDescription": "Creates a second-generation package (package2) version in the Dev Hub org.",
      "help": "The package version is based on the package contents in the specified directory.\n\nTo retrieve details about a package version create request, including status and package2 version ID (05i), run \"sfdx force:package2:version:create:get -i 08c...\".\n\nTo list package version creation requests in the org, run \"sfdx force:package2:version:create:list\".\n\nExamples:\n   $ sfdx force:package2:version:create -d common\n   $ sfdx force:package2:version:create -i 0Ho... -d common",
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "package2id",
          "char": "i",
          "description": "ID of the parent package (starts with 0Ho)",
          "longDescription": "ID of parent package (starts with 0Ho).",
          "hasValue": true,
          "required": false,
          "type": "id"
        },
        {
          "name": "directory",
          "char": "d",
          "description": "path to directory that contains the contents of the package version",
          "longDescription": "The path to the directory that contains the contents of the package version.",
          "hasValue": true,
          "required": false,
          "type": "directory"
        },
        {
          "name": "branch",
          "char": "b",
          "description": "the package version’s branch",
          "longDescription": "The package version’s branch.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "tag",
          "char": "t",
          "description": "the package version’s tag",
          "longDescription": "The package version’s tag.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "installationkey",
          "char": "k",
          "description": "installation key for key-protected package (default: null)",
          "longDescription": "Installation key for creating the key-protected package. The default is null.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "preserve",
          "char": "p",
          "description": "temp files are preserved that would otherwise be deleted",
          "longDescription": "Specifies that the temp files are preserved that would otherwise be deleted",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "type": "boolean"
        },
        {
          "name": "validateschema",
          "char": "j",
          "description": "sfdx-project.json is validated against JSON schema",
          "longDescription": "Specifies that the sfdx-project.json file should be validated against JSON schema",
          "hasValue": false,
          "required": false,
          "hidden": true,
          "type": "boolean"
        },
        {
          "name": "wait",
          "char": "w",
          "description": "minutes to wait for the package version to be created (default:0)",
          "longDescription": "The number of minutes to wait for the package version to be created.",
          "hasValue": true,
          "required": false,
          "type": "minutes",
          "default": "0"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:create",
      "topic": "force:package2",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "usage": "force:package2:version:create [-i <id>] [-d <directory>] [-b <string>] [-t <string>] [-k <string>] [-w <minutes>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve the status of a package version creation request",
      "longDescription": "Retrieves the status of a package version creation request.",
      "help": "Displays the status of a package upload request.",
      "requiresProject": false,
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "requestid",
          "char": "i",
          "description": "PackageUploadRequest ID",
          "longDescription": "The ID of the PackageUploadRequest.",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:create:get",
      "topic": "force:package1",
      "supportsTargetDevHubUsername": false,
      "usage": "force:package1:version:create:get -i <id> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve a package version creation request",
      "longDescription": "Retrieves a second-generation package version creation request in the Dev Hub org.",
      "help": "Specify the request ID for which you want to view details. If applicable, the command displays errors related to the request.\n\nExamples:\n   $ sfdx force:package2:version:create:get --package2createrequestid 08c...\n\nTo show all requests in the org, run \"sfdx package2:version:create:list\".",
      "requiresProject": false,
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "package2createrequestid",
          "char": "i",
          "description": "package2 version creation request ID (starts with 08c)",
          "longDescription": "The ID of the package2 version creation request you want to display.",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:create:get",
      "topic": "force:package2",
      "supportsTargetUsername": false,
      "usage": "force:package2:version:create:get -i <id> [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "list package version creation requests",
      "longDescription": "Lists all requests to create second-generation package (package2) versions in the Dev Hub org.",
      "help": "Shows the details of each request to create a package2 version that's run in the Dev Hub org.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nTo get information about a specific request, run \"sfdx force:package2:version:create:get\" and supply the request ID.\n\nExamples:\n   $ sfdx force:package2:version:create:list\n   $ sfdx force:package2:version:create:list --createdlastdays 3\n   $ sfdx force:package2:version:create:list --status Error\n   $ sfdx force:package2:version:create:list -s InProgress\n   $ sfdx force:package2:version:create:list -c 3 -s Success",
      "requiresProject": false,
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "createdlastdays",
          "char": "c",
          "description": "created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)",
          "longDescription": "Filters the list based on the specified maximum number of days since the request was created (starting at 00:00:00 of first day to now; 0 for today).",
          "hasValue": true,
          "required": false,
          "type": "number"
        },
        {
          "name": "status",
          "char": "s",
          "description": "filter the list by version creation request status (Queued,InProgress,Success,Error)",
          "longDescription": "Filters the list based on the status of version creation requests.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "values": [
            "Queued",
            "InProgress",
            "Success",
            "Error"
          ]
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:create:list",
      "topic": "force:package2",
      "supportsTargetUsername": false,
      "usage": "force:package2:version:create:list [-c <number>] [-s <string>] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "display details about a first-generation package version",
      "longDescription": "Displays detailed information about an individual first-generation package version.",
      "help": "Display detailed information about an individual package version, including metadata package ID, name, the release state, and build number.",
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "packageversionid",
          "char": "i",
          "description": "metadata package version ID (starts with 04t)",
          "longDescription": "ID (starts with 04t) of the metadata package version whose details you want to display.",
          "type": "id",
          "hasValue": true,
          "required": true
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:display",
      "topic": "force:package1",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:package1:version:display -i <id> [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "retrieve a package version in the Dev Hub org",
      "longDescription": "Retrieves a package version in the Dev Hub org.",
      "help": "Examples:\n   $ sfdx force:package2:version:get --package2versionid 05i...\n\nTo update package version values, run \"sfdx force:package2:version:update\".",
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "package2versionid",
          "char": "i",
          "description": "the package version ID (starts wtih 05i)",
          "longDescription": "The package version ID (starts with 05i).",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:get",
      "topic": "force:package2",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "usage": "force:package2:version:get -i <id> [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "list package versions for the specified first-generation package or for the org",
      "longDescription": "Lists the versions for the specified package or all first-generation packages in the org.",
      "help": "If a metadata package ID is specified, lists all versions of the specified package. Otherwise, lists all package versions for the org. For each package version, the list includes the package version ID, metadata package ID, name, version number, and release state.",
      "supportsTargetUsername": true,
      "flags": [
        {
          "name": "packageid",
          "char": "i",
          "description": "metadata package ID (starts with 033)",
          "longDescription": "Metadata package ID (starts with 033) whose package versions you want to list. If not specified, shows all versions for all packages (managed and unmanaged) in the org.",
          "type": "id",
          "hasValue": true,
          "required": false
        },
        {
          "name": "targetusername",
          "char": "u",
          "description": "username or alias for the target org; overrides default target org",
          "longDescription": "A username or alias for the target org. Overrides the default target org.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:list",
      "topic": "force:package1",
      "requiresProject": true,
      "supportsTargetDevHubUsername": false,
      "usage": "force:package1:version:list [-i <id>] [-u <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "list all package versions in the Dev Hub org",
      "longDescription": "Lists all package2 versions in the Dev Hub org.",
      "help": "Displays details of each package2 version in the org.\n\nUse --concise or --verbose to display limited or additional details, respectively.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nExamples:\n   $ sfdx force:package2:version:list --verbose --createdlastdays 3 --released --orderby PatchVersion\n   $ sfdx force:package2:version:list --package2ids 0Ho000000000000,0Ho000000000001 --released --modifiedlastdays 0\n   $ sfdx force:package2:version:list --released\n   $ sfdx force:package2:version:list --concise --modifiedlastdays 0\n   $ sfdx force:package2:version:list --concise -c 3 -r",
      "requiresProject": false,
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "createdlastdays",
          "char": "c",
          "description": "created in the last specified number of days (starting at 00:00:00 of first day to now; 0 for today)",
          "longDescription": "Filters the list based on the specified maximum number of days since the request was created (starting at 00:00:00 of first day to now; 0 for today).",
          "hasValue": true,
          "required": false,
          "type": "number"
        },
        {
          "name": "modifiedlastdays",
          "char": "m",
          "description": "list items modified in the specified last number of days (starting at 00:00:00 of first day to now; 0 for today)",
          "longDescription": "Lists the items modified in the specified last number of days, starting at 00:00:00 of first day to now. Use 0 for today.",
          "hasValue": true,
          "required": false,
          "type": "number"
        },
        {
          "name": "package2ids",
          "char": "i",
          "description": "filter results on specified comma-delimited package2 ids (start with 0Ho)",
          "longDescription": "Filters results on the specified comma-delimited package2 IDs (start with 0Ho).",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true
        },
        {
          "name": "released",
          "char": "r",
          "description": "display released versions only",
          "longDescription": "Displays released versions only (IsBeta=false).",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "orderby",
          "char": "o",
          "description": "order by the specified package2 version fields",
          "longDescription": "Orders the list by the specified package2 version fields.",
          "hasValue": true,
          "required": false,
          "type": "string",
          "array": true
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "concise",
          "description": "display limited package2 version details",
          "longDescription": "Displays limited package2 version details.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        },
        {
          "name": "verbose",
          "description": "display extended package2 versions detail",
          "longDescription": "Display extended package2 versions detail.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        }
      ],
      "command": "version:list",
      "topic": "force:package2",
      "supportsTargetUsername": false,
      "usage": "force:package2:version:list [-c <number>] [-m <number>] [-i <string>...] [-r] [-o <string>...] [-v <string>] [--concise] [--json] [--loglevel <string>] [--verbose]"
    },
    {
      "description": "update a second-generation package version",
      "longDescription": "Updates a second-generation package version in the Dev Hub org.",
      "help": "Specify a new value for each option you want to update.\n\nExamples:\n   $ sfdx force:package2:version:update --package2versionid 05i... --setasreleased\n   $ sfdx force:package2:version:update -i 05i... -b master -t 'Release 1.0.7'\n\nTo display details about a package2 version, run \"sfdx package2:version:get\".",
      "orgType": "defaultdevhubusername",
      "supportsTargetDevHubUsername": true,
      "flags": [
        {
          "name": "package2versionid",
          "char": "i",
          "description": "the package version ID (starts wtih 05i)",
          "longDescription": "The package version ID (starts with 05i).",
          "hasValue": true,
          "required": true,
          "type": "id"
        },
        {
          "name": "name",
          "char": "n",
          "description": "the package version name",
          "longDescription": "The package version name.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "description",
          "char": "d",
          "description": "the package version description",
          "longDescription": "The second-generation package version description.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "branch",
          "char": "b",
          "description": "the package version branch",
          "longDescription": "The second-generation package version branch.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "tag",
          "char": "t",
          "description": "the package version tag",
          "longDescription": "The second-generation package version tag.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "installationkey",
          "char": "k",
          "description": "installation key for key-protected package (default: null)",
          "longDescription": "Installation key for creating the key-protected package. The default is null.",
          "hasValue": true,
          "required": false,
          "type": "string"
        },
        {
          "name": "setasreleased",
          "char": "s",
          "description": "set the package version as released (can’t be undone)",
          "longDescription": "Sets the second-generation package version as released. Second-generation packages can’t be changed to beta after they’ve been released.",
          "hasValue": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "targetdevhubusername",
          "char": "v",
          "description": "username or alias for the dev hub org; overrides default dev hub org",
          "longDescription": "A username or alias for the target Dev Hub org. Overrides the default Dev Hub org.",
          "required": false,
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "version:update",
      "topic": "force:package2",
      "requiresProject": true,
      "supportsTargetUsername": false,
      "usage": "force:package2:version:update -i <id> [-n <string>] [-d <string>] [-b <string>] [-t <string>] [-k <string>] [-s] [-v <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "authorize an org using the web login flow",
      "longDescription": "Authorizes a Salesforce org by opening a browser so you can log in through salesforce.com.",
      "help": "To log in to a sandbox, set --instanceurl to https://test.salesforce.com.\n\nExamples:\n   $ sfdx force:auth:web:login -a TestOrg1\n   $ sfdx force:auth:web:login -i <OAuth client id>\n   $ sfdx force:auth:web:login -r https://test.salesforce.com",
      "requiresProject": false,
      "flags": [
        {
          "name": "clientid",
          "char": "i",
          "description": "OAuth client ID (sometimes called the consumer key)",
          "longDescription": "The OAuth client ID (sometimes referred to as the consumer key).",
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "instanceurl",
          "char": "r",
          "description": "the login URL of the instance the org lives on",
          "longDescription": "The login URL of the Salesforce instance that the org lives on.",
          "hasValue": true,
          "type": "url"
        },
        {
          "name": "setdefaultdevhubusername",
          "char": "d",
          "description": "set the authenticated org as the default dev hub org for scratch org creation",
          "longDescription": "Sets the authenticated org as the default Dev Hub org for scratch org creation.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setdefaultusername",
          "char": "s",
          "description": "set the authenticated org as the default username that all commands run against",
          "longDescription": "Sets the authenticated org as the default username that all commands run against.",
          "hasValue": false,
          "type": "flag"
        },
        {
          "name": "setalias",
          "char": "a",
          "description": "set an alias for the authenticated org",
          "longDescription": "Sets an alias for the authenticated org.",
          "hasValue": true,
          "type": "string"
        },
        {
          "name": "disablemasking",
          "description": "disable masking of user input (for use with problematic terminals)",
          "longDescription": "Disables masking of user input (for use with problematic terminals).",
          "hasValue": false,
          "hidden": true,
          "type": "flag"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "command": "web:login",
      "topic": "force:auth",
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force:auth:web:login [-i <string>] [-r <url>] [-d] [-s] [-a <string>] [--json] [--loglevel <string>]"
    },
    {
      "description": "manage username aliases",
      "longDescription": "Use the alias commands to manage username aliases.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:alias",
      "usage": "force:alias:COMMAND [command-specific-options]"
    },
    {
      "description": "work with Apex code",
      "longDescription": "Use the apex commands to create Apex classes, execute anonymous blocks, view your logs, run Apex tests, and view Apex test results.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:apex",
      "usage": "force:apex:COMMAND [command-specific-options]"
    },
    {
      "description": "authorize an org for use with the Salesforce CLI",
      "longDescription": "Use the auth commands to authorize a Salesforce org for use with the Salesforce CLI.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:auth",
      "usage": "force:auth:COMMAND [command-specific-options]"
    },
    {
      "description": "configure the Salesforce CLI",
      "longDescription": "Use the config commands to view and set your Salesforce CLI configuration values. Set your default Dev Hub and scratch org, and your default instance URL, either globally or at the project level.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:config",
      "usage": "force:config:COMMAND [command-specific-options]"
    },
    {
      "description": "manipulate records in your org",
      "longDescription": "Use the data commands to manipulate records in your org. Commands are available to help you work with various APIs. Import CSV files with the Bulk API. Export and import data that includes master-detail relationships with the SObject Tree Save API. Perform simple CRUD operations on individual records with the REST API.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:data",
      "usage": "force:data:COMMAND [command-specific-options]"
    },
    {
      "description": "display help for force commands",
      "longDescription": "Use the doc commands to display descriptions and help for commands in the force namespace.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:doc",
      "usage": "force:doc:COMMAND [command-specific-options]"
    },
    {
      "description": "create and test Lightning component bundles",
      "longDescription": "Use the lightning commands to create and test Lightning component bundles.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:lightning",
      "usage": "force:lightning:COMMAND [command-specific-options]"
    },
    {
      "description": "view your org’s limits",
      "longDescription": "Use the limits commands to view your org’s limits and how close you are to reaching them.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:limits",
      "usage": "force:limits:COMMAND [command-specific-options]"
    },
    {
      "description": "retrieve and deploy metadata using Metadata API",
      "longDescription": "Use the mdapi commands to retrieve and deploy Metadata API–formatted files that represent components in an org, or to convert Metadata API–formatted metadata into the source format used in Salesforce DX projects.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:mdapi",
      "usage": "force:mdapi:COMMAND [command-specific-options]"
    },
    {
      "description": "manage your Salesforce DX orgs",
      "longDescription": "Use the org commands to manage the orgs you use with Salesforce DX. Create and delete scratch orgs, list your created and authorized orgs, and open orgs in your browser.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:org",
      "usage": "force:org:COMMAND [command-specific-options]"
    },
    {
      "description": "install and uninstall first- and second-generation packages",
      "longDescription": "Use the package commands to install and uninstall first- and second-generation packages.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:package",
      "usage": "force:package:COMMAND [command-specific-options]"
    },
    {
      "description": "develop first-generation managed and unmanaged packages",
      "longDescription": "Use the package1 commands to create and view first-generation package versions in your Dev Hub org.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:package1",
      "usage": "force:package1:COMMAND [command-specific-options]"
    },
    {
      "description": "develop second-generation packages",
      "longDescription": "Use the package2 commands to create, install, and manage second-generation packages.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:package2",
      "usage": "force:package2:COMMAND [command-specific-options]"
    },
    {
      "description": "set up a Salesforce DX project",
      "longDescription": "Use the project commands to set up a project in the Salesforce DX format.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:project",
      "usage": "force:project:COMMAND [command-specific-options]"
    },
    {
      "description": "view standard and custom objects",
      "longDescription": "Use the schema commands to view the metadata for the standard and custom objects in your org.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:schema",
      "usage": "force:schema:COMMAND [command-specific-options]"
    },
    {
      "description": "sync your project with your orgs",
      "longDescription": "Use the source commands to push and pull source to and from your scratch orgs, to see synchronization changes between your project and scratch orgs, and to prepare your source for deployment to non-scratch orgs.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:source",
      "usage": "force:source:COMMAND [command-specific-options]"
    },
    {
      "description": "perform user-related admin tasks",
      "longDescription": "Use the user commands to perform user-related admin tasks.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:user",
      "usage": "force:user:COMMAND [command-specific-options]"
    },
    {
      "description": "create and edit Visualforce files",
      "longDescription": "Use the visualforce commands to create Visualforce pages and components.",
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "mainTopic": true,
      "topic": "force:visualforce",
      "usage": "force:visualforce:COMMAND [command-specific-options]"
    },
    {
      "namespace": "force",
      "hidden": true,
      "topic": "force",
      "requiresProject": false,
      "flags": [
        {
          "name": "version",
          "char": "v",
          "description": "display the Salesforce API version"
        },
        {
          "name": "json",
          "description": "format output as json",
          "longDescription": "Format output as JSON.",
          "hasValue": false,
          "hidden": false,
          "required": false,
          "type": "flag"
        },
        {
          "name": "loglevel",
          "description": "logging level for this command invocation (error*,trace,debug,info,warn,fatal)",
          "longDescription": "The logging level for this command invocation. Logs are stored in $HOME/.sfdx/sfdx.log.",
          "hasValue": true,
          "hidden": false,
          "required": false,
          "values": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "error",
          "type": "string"
        }
      ],
      "supportsTargetUsername": false,
      "supportsTargetDevHubUsername": false,
      "usage": "force: [-v] [--json] [--loglevel <string>]"
    },
    {
      "mainTopic": true,
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "topic": "force:apex",
      "usage": "force:apex:COMMAND [command-specific-options]"
    },
    {
      "mainTopic": true,
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "topic": "force:visualforce",
      "usage": "force:visualforce:COMMAND [command-specific-options]"
    },
    {
      "mainTopic": true,
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "topic": "force:lightning",
      "usage": "force:lightning:COMMAND [command-specific-options]"
    },
    {
      "mainTopic": true,
      "requiresProject": false,
      "supportsTargetUsername": false,
      "supportsPerfLogLevelFlag": false,
      "hidden": true,
      "topic": "force:project",
      "usage": "force:project:COMMAND [command-specific-options]"
    }
  ]
}
